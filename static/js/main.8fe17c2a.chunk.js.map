{"version":3,"sources":["elements/helpers.js","elements/app.js","modules/fabric/index.js","data/config.js","elements/colorSchema.js","helpers/misc.js","components/content/components/canvas/components/edge.js","components/content/components/canvas/components/node.js","modules/stack.js","helpers/graph.js","stores/canvasStore.js","components/content/elements/index.js","components/content/components/canvas/index.js","components/content/components/sidebar/components/graphOptions.js","components/content/components/sidebar/components/graphProperties.js","components/content/components/sidebar/components/nodeOptions.js","components/content/components/sidebar/index.js","components/content/index.js","components/navbar/elements/index.js","components/navbar/index.js","components/index.js","utils/withStore.js","reportWebVitals.js","index.js"],"names":["vFlex","css","hFlex","AppEl","styled","div","fabric","Object","prototype","originX","originY","LineArrow","util","createClass","Line","type","initialize","el","options","this","callSuper","toObject","object","extend","_render","ctx","width","height","visible","save","xDiff","x2","x1","yDiff","y2","y1","angle","Math","atan2","d","sqrt","strokeWidth","arrowx","destCurve","a","cos","arrowy","b","sin","arrow","translate","rotate","beginPath","moveTo","lineTo","closePath","fillStyle","stroke","fill","restore","fromObject","callback","async","constants","defaultNode","radius","initCanvasState","nodeCount","nodeUpdateOptions","UNDIRECTED_EDGE","DIRECTED_EDGE","gray","getRandomNumberInterval","min","max","floor","random","getNodeNumber","node","nodeId","id","parseInt","match","console","error","createEdge","canvas","childId","edge","p","c","getObjects","find","edgeOptions","selectable","evented","left","top","moveEdge","edges","forEach","line","set","incomingEdges","createNode","title","canvasBoundaries","vptCoords","br","circle","Circle","text","Text","toString","fontSize","grp","Group","x","y","controls","on","e","fire","target","transform","updateNodeData","data","getActiveObject","keys","item","renderAll","push","node2","add","sendToBack","selected","log","Stack","items","length","pop","slice","str","trim","fundamentalMatrix","X","n","g","Array","map","getAdjacencyMatrix","TW","level","pred","ans","value","root","T","z","Boolean","indexOf","start","end","i","fundamentalCircuit","isEmpty","CanvasStore","createContainer","useState","setCanvas","setSelected","canvasState","setCanvasState","initCanvas","useCallback","canvasId","canvasOptions","Canvas","option","prevState","move","resetCanvas","dispose","addNode","newNode","setActiveObject","updateNode","addDirectedEdge","parent","addUndirectedEdge","src","dest","addGraph","graph","prevNodeCount","nodes","_","r","curNode","j","getFundamentalMatrix","isCanvasActive","ContentEl","CanvasEl","SidebarEl","GraphOptionsEl","GraphPropertiesEl","canvasContainer","useRef","canvasRef","useContainer","useEffect","current","clientWidth","clientHeight","backgroundColor","preserveObjectStacking","ref","GraphOptions","input","setInput","inputType","setInputType","className","onChange","defaultChecked","name","htmlFor","rows","onClick","preventDefault","inputCheck","output","message","status","mat","replace","split","arr","every","row","checkGraphInput","alert","GraphProperties","loading","setLoading","NodeOptions","nodeState","setNodeState","otherNodes","setOtherNodes","prev","filter","update","onSubmit","getElementsByTagName","Sidebar","Content","NavbarEl","Navbar","disabled","withStore","stores","WrappedComponent","props","reduce","component","Store","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PASaA,EAAQC,YAAH,6HAOLC,EAAQD,YAAH,0HCbLE,GDoBSF,YAAH,mHAOIA,YAAH,mGAMGA,YAAH,mGAUGA,YAAH,qGAQUA,YAAH,qHCnDNG,IAAOC,IAAV,+FACdL,I,qCCFJM,SAAOC,OAAOC,UAAUC,QAAUH,SAAOC,OAAOC,UAAUE,QAAU,SAEpEJ,SAAOK,UAAYL,SAAOM,KAAKC,YAAYP,SAAOQ,KAAM,CACtDC,KAAM,YACNC,WAAY,SAAUC,EAAIC,GACxBA,IAAYA,EAAU,IAEtBC,KAAKC,UAAU,aAAcH,EAAIC,IAEnCG,SAAU,WACR,OAAOf,SAAOM,KAAKU,OAAOC,OAAOJ,KAAKC,UAAU,cAElDI,QAAS,SAAUC,GAGjB,GAFAN,KAAKC,UAAU,UAAWK,GAEP,IAAfN,KAAKO,OAA+B,IAAhBP,KAAKQ,QAAiBR,KAAKS,QAAnD,CAEAH,EAAII,OAEJ,IAAIC,EAAQX,KAAKY,GAAKZ,KAAKa,GACvBC,EAAQd,KAAKe,GAAKf,KAAKgB,GACvBC,EAAQC,KAAKC,MAAML,EAAOH,GAC1BS,EAAKF,KAAKG,KAAK,GAAK,EAAKrB,KAAKsB,YAC9BC,EAASvB,KAAKY,GAAMZ,KAAKwB,UAAUC,EAAI,EAAKP,KAAKQ,IAAIT,GACrDU,EAAS3B,KAAKe,GAAMf,KAAKwB,UAAUI,EAAI,EAAKV,KAAKW,IAAIZ,GACrDa,EAAQZ,KAAKG,KAAK,SAACE,EAASvB,KAAKY,GAAO,GAAtB,SAA2Be,EAAS3B,KAAKe,GAAO,IAEtET,EAAIyB,UAAUpB,EAAQ,EAAGG,EAAQ,GACjCR,EAAI0B,OAAOf,GACXX,EAAI2B,YACJ3B,EAAI4B,OAAOd,EAAIU,EAAO,GACtBxB,EAAI6B,QAAQ,EAAIf,EAAIU,EAAQ,IAASV,GACrCd,EAAI6B,QAAQ,EAAIf,EAAIU,GAAQ,IAAUV,GACtCd,EAAI8B,YACJ9B,EAAI+B,UAAYrC,KAAKsC,OACrBhC,EAAIiC,OAEJjC,EAAIkC,cAIRrD,SAAOK,UAAUiD,WAAa,SAAUtC,EAAQuC,GAC9CA,GACEA,EACE,IAAIvD,SAAOK,UAAU,CAACW,EAAOU,GAAIV,EAAOa,GAAIb,EAAOS,GAAIT,EAAOY,IAAKZ,KAIzEhB,SAAOK,UAAUmD,OAAQ,EAEVxD,I,UAAAA,IAAf,OCpDayD,EACM,aAINC,EAAc,CACzBC,OAAQ,IAGGC,EAAkB,CAC7BC,UAAW,GAGAC,EAAoB,CAC/BC,gBAAiBN,EACjBO,cAbe,YCAJC,EAAO,UCFPC,EAA0B,WAAuB,IAAtBC,EAAqB,uDAAf,EAAGC,EAAY,uDAAN,EACrD,OAAOrC,KAAKsC,MAAMtC,KAAKuC,UAAYF,EAAMD,EAAM,GAAKA,IAGzCI,EAAgB,SAACC,GAC5B,IAAIC,EAAyB,kBAATD,EAAoBA,EAA3B,OAAkCA,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAME,GACrD,OAAKD,EAIEE,SAASF,EAAOG,MAAM,WAAW,KAHtCC,QAAQC,MAAM,iBACN,ICLCC,EAAa,SAACC,EAAD,GAA4C,IAA3BC,EAA0B,EAAhCC,KAAeV,EAAiB,EAAjBA,KAAM/D,EAAW,EAAXA,KAClD0E,EAAIX,EACJY,EAAIJ,EAAOK,aAAaC,MAAK,qBAAGZ,KAAgBO,KAEhDM,EAAc,CAClBnC,KAAM,MACND,OAAQ,MACRhB,YAAa,EACbqD,YAAY,EACZ/E,OACAgF,SAAS,EACTpD,UAAW,CAAEC,EAAG8C,EAAEhE,MAAOqB,EAAG2C,EAAE/D,SAShC,OANIZ,IAASqD,EAAkBE,cACtB,IAAIhE,EAAOK,UAAU,CAAC8E,EAAEO,KAAMP,EAAEQ,IAAKP,EAAEM,KAAMN,EAAEO,KAAMJ,GAErD,IAAIvF,EAAOQ,KAAK,CAAC2E,EAAEO,KAAMP,EAAEQ,IAAKP,EAAEM,KAAMN,EAAEO,KAAMJ,IAM9CK,EAAW,SAACpB,GACvBA,EAAKqB,MAAMC,SAAQ,qBAAGC,KAAgBC,IAAI,CAAEtE,GAAI8C,EAAKkB,KAAM7D,GAAI2C,EAAKmB,SACpEnB,EAAKyB,cAAcH,SAAQ,qBAAGC,KACvBC,IAAI,CAAEvE,GAAI+C,EAAKkB,KAAM9D,GAAI4C,EAAKmB,UCxB1BO,EAAa,SAAClB,EAAD,GAA4B,IAAjBN,EAAgB,EAAhBA,GAAIyB,EAAY,EAAZA,MACjCC,EAAmBpB,EAAOqB,UAAUC,GAGpCC,EAAS,IAAIvG,EAAOwG,OAAO,CAC/B7C,OAHa,GAIbP,KAAMa,EACN9D,QAAS,SACTC,QAAS,WAELqG,EAAO,IAAIzG,EAAO0G,KAAKP,EAAMQ,WAAY,CAC7CC,SAAU,GACVzG,QAAS,SACTC,QAAS,WAGLyG,EAAM,IAAI7G,EAAO8G,MAAM,CAACP,EAAQE,GAAO,CAC3Cf,KAAMxB,EAfO,GAeyBkC,EAAiBW,EAf1C,IAgBbpB,IAAKzB,EAhBQ,GAgBwBkC,EAAiBY,EAhBzC,IAiBbvG,KAAM,OACNiE,KACA+B,KAAMN,EACNN,MAAO,GACPI,cAAe,GACfgB,UAAU,IAmBZ,OAhBAJ,EACGK,GAAG,YAAY,SAAUC,GACxBnC,EAAOoC,KAAK,gBAAiBD,EAAEE,QAC/BrC,EAAOoC,KAAK,iBAAkBD,EAAEE,WAEjCH,GAAG,cAAc,SAAUC,GAC1BnC,EAAOoC,KAAK,mBAAoBD,EAAEE,QAClCrC,EAAOoC,KAAK,qBAAsBD,EAAEE,WAErCH,GAAG,WAAW,SAAUC,GACvBnC,EAAOoC,KAAK,gBAAiBD,EAAEE,WAEhCH,GAAG,UAAU,SAAUC,GACtBnC,EAAOoC,KAAK,cAAeD,EAAEG,UAAUD,WAGpCR,GAGIU,EAAiB,SAACvC,GAAuB,IAAfwC,EAAc,uDAAP,GACtChD,GAAW,OAAJgD,QAAI,IAAJA,OAAA,EAAAA,EAAMhD,OAAQQ,EAAOyC,kBAElC,OAAQxH,OAAOyH,KAAKF,GAAM,IACxB,IAAK,OAGH,OAFAhD,EAAKmD,KAAK,GAAG3B,IAAIwB,QACjBhD,EAAKwB,IAAIwB,GAEX,IAAK,OAGH,OAFA5B,EAASpB,QACTQ,EAAO4C,YAET,IAAK,OACH,IAAM1C,EAAOH,EAAWC,EAAQwC,GAChChD,EAAKqB,MAAMgC,KAAK,CAAEpD,OAAQ+C,EAAKtC,KAAMzE,KAAM+G,EAAK/G,KAAMsF,KAAMb,IAC5D,IAAM4C,EAAQ9C,EAAOK,aAAaC,MAAK,qBAAGZ,KAAgB8C,EAAKtC,QAQ/D,OAPA4C,EAAM7B,cAAc4B,KAAK,CACvBpD,OAAQD,EAAKE,GACbjE,KAAM+G,EAAK/G,KACXsF,KAAMb,IAERF,EAAOoC,KAAK,gBAAiB5C,QAC7BQ,EAAO+C,IAAI7C,GAAM8C,WAAW9C,GAAM0C,YAEpC,IAAK,WAGH,OAFApD,EAAKmD,KAAK,GAAG3B,IAAI,CAAE5C,KAAMoE,EAAKS,SAAW,MAAQhE,SACjDe,EAAO4C,YAET,QAEE,YADA/C,QAAQqD,IAAI,gB,gBCxCHC,E,WAvCb,aAAe,oBACbtH,KAAKuH,MAAQ,G,wCAGf,SAAKzH,GACHE,KAAKuH,MAAMP,KAAKlH,K,iBAGlB,WACE,OAA0B,IAAtBE,KAAKuH,MAAMC,QACbxD,QAAQC,MAAM,sBACP,MAEFjE,KAAKuH,MAAME,Q,iBAGpB,WACE,OAA0B,IAAtBzH,KAAKuH,MAAMC,QACbxD,QAAQC,MAAM,sBACP,MAEFjE,KAAKuH,MAAMG,OAAO,GAAG,K,qBAG9B,WACE,OAA6B,IAAtB1H,KAAKuH,MAAMC,S,mBAGpB,WACE,IAAIG,EAAM,GAEV,OADA3H,KAAKuH,MAAMtC,SAAQ,SAACnF,GAAD,OAAS6H,GAAO7H,EAAK,OACjC6H,EAAIC,S,kBAGb,WACE,OAAO5H,KAAKuH,MAAMC,W,KC+BTK,EAAoB,SAAC1D,GAChC,IAAI2D,EAnCqB,SAAC3D,GAC1B,IAAM4D,EAAI5D,EAAOK,WAAW,QAAQgD,OAChCQ,EAAI,YAAIC,MAAMF,IAAIG,KAAI,SAAC5B,GAAD,OAAO2B,MAAMF,GAAGxF,KAAK,MAW/C,OATA4B,EAAOK,WAAW,QAAQS,SAAQ,SAACtB,GACjC,IAAMW,EAAIZ,EAAcC,GAAQ,EAChCA,EAAKqB,MAAMC,SAAQ,YAAuB,IAApBrF,EAAmB,EAAnBA,KAAMgE,EAAa,EAAbA,OACpBW,EAAIb,EAAcE,GAAU,EAClCoE,EAAE1D,GAAGC,GAAK,EACN3E,IAASgD,IAA2BoF,EAAEzD,GAAGD,GAAK,SAI/C0D,EAsBCG,CAAmBhE,GACvBiE,EAAK,IAAId,EACTe,EAAQ,IAAIJ,MAAMH,EAAEN,QAAQjF,MAAM,GAClC+F,EAAO,IAAIL,MAAMH,EAAEN,QACnBe,EAAM,GAwBV,OAtBAF,EAAMpD,SAAQ,SAACuD,EAAOC,IACL,IAAXD,GAAe,WACjBJ,EAAGpB,KAAKyB,GACR,IAAIC,EAAI,CAACD,GACTJ,EAAMI,GAAQH,EAAKG,GAAQ,EAC3B,IAJgB,iBAKd,IAAME,EAAIP,EAAGX,MACbK,EAAEa,GAAG1D,SAAQ,SAACZ,EAAMC,GACdsE,QAAQvE,MACY,IAAlBqE,EAAEG,QAAQvE,IACZgE,EAAKhE,GAAKqE,EACVN,EAAM/D,GAAK+D,EAAMM,GAAK,EACtBD,EAAE1B,KAAK1C,GACP8D,EAAGpB,KAAK1C,IACHiE,EAAIvB,KAvCI,WAA4B,IAA3BsB,EAA0B,uDAAnB,GAAIQ,EAAe,uCAARC,EAAQ,uCACpD,GAAqB,kBAAVD,GAAqC,kBAARC,EAEtC,OADA/E,QAAQC,MAAM,6CACP,GAKT,IAHA,IAAIsE,EAAM,GACNS,EAAIF,EAEDE,IAAMV,EAAKS,IAChBR,EAAIvB,KAAKgC,EAAI,GACbA,EAAIV,EAAKU,GAKX,OAHAT,EAAIvB,KAAKsB,EAAKS,GAAO,GACrBR,EAAIvB,KAAK+B,EAAM,GAERR,EAwBmBU,CAAmBX,EAAMK,EAAGrE,IAC5CwD,EAAEa,GAAGrE,GAAKwD,EAAExD,GAAGqE,GAAK,QAVlBP,EAAGc,WAAY,IAJN,MAqBdX,GC+DMY,EAjJKC,aAAgB,WAClC,MAA4BC,mBAAS,MAArC,mBAAOlF,EAAP,KAAemF,EAAf,KACA,EAAgCD,mBAAS,MAAzC,mBAAOjC,EAAP,KAAiBmC,EAAjB,KACA,EAAsCF,mBAAStG,GAA/C,mBAAOyG,EAAP,KAAoBC,EAApB,KAEMC,EAAaC,uBAAY,SAAChG,EAAMiG,EAAUC,GAC9C,GAAMlG,EAAM,CACV,IAAIQ,EAAS,IAAIhF,EAAO2K,OAAOF,EAAUC,GAEzC1F,EAAOkC,GAAG,iBAAiB,SAAC0D,GAAD,OACzBR,GAAY,SAACS,GAAD,OACVA,EAAS,2BAAQA,GAAcD,GAAWA,QAG9C5F,EAAOkC,GAAG,kBAAkB,SAAC0D,GAAD,OAC1BrD,EAAevC,EAAQ,CAAEiD,UAAU,EAAMzD,KAAMoG,OAEjD5F,EAAOkC,GAAG,sBAAsB,kBAAMkD,EAAY,SAClDpF,EAAOkC,GAAG,oBAAoB,SAAC0D,GAAD,OAC5BrD,EAAevC,EAAQ,CAAEiD,UAAU,EAAOzD,KAAMoG,OAElD5F,EAAOkC,GAAG,eAAe,SAAC0D,GAAD,OACvBrD,EAAevC,EAAQ,CAAE8F,MAAM,EAAMtG,KAAMoG,OAE7CT,EAAUnF,MAEX,IAEG+F,EAAcP,uBAAY,WAC9BxF,EAAOgG,YAGN,CAAChG,IAEEiG,EAAUT,uBACd,WAA4B,IAA3B5J,EAA0B,uDAAhB8C,EACT,GAAIsB,EAAQ,CACV,IAAMkG,EAAUhF,EAAWlB,EAAQ,CACjCN,GAAG,QAAD,OAAU2F,EAAYxG,UAAY,GACpCsC,OAAc,OAAPvF,QAAO,IAAPA,OAAA,EAAAA,EAASuF,QAASkE,EAAYxG,UAAY,IAGnDmB,EAAO+C,IAAImD,GAASC,gBAAgBD,GACpCZ,EAAe,2BACVD,GADS,IAEZxG,UAAWwG,EAAYxG,UAAY,QAKzC,CAACmB,EAAQqF,EAAaC,IAGlBc,EAAaZ,uBACjB,SAAChD,GACKxC,IACFuC,EAAevC,EAAQwC,GACvBxC,EAAO4C,eAGX,CAAC5C,IAGGqG,EAAkBb,uBACtB,SAACc,EAAQjE,GACP+D,EAAW,CACTlG,KAAMmC,EACN7C,KAAM8G,EACN7K,KAAMqD,EAAkBE,kBAG5B,CAACoH,IAGGG,EAAoBf,uBACxB,SAACgB,EAAKC,GACJL,EAAW,CACTlG,KAAMuG,EACNjH,KAAMgH,EACN/K,KAAMqD,EAAkBC,oBAG5B,CAACqH,IAGGM,EAAWlB,uBACf,SAAC/J,GAAsB,IAAhBkL,EAAe,uDAAP,GACb,GAAa,WAATlL,EAAmB,CACrB,IAAMmL,EAAgB5G,EAAOK,WAAW,QAAQgD,OAC5CwD,EAAQ,GAEZ,YAAI/C,MAAM6C,EAAMtD,SAASvC,SAAQ,SAACgG,EAAGjC,GACnC,IAAMqB,EAAUhF,EAAWlB,EAAQ,CACjCN,GAAG,QAAD,OAAUkH,EAAgB/B,EAAI,GAChC1D,MAAOyF,EAAgB/B,EAAI,IAG7B7E,EAAO+C,IAAImD,GACXW,EAAMhE,KAAKqD,MAEbZ,GAAe,SAACO,GAAD,mBAAC,eACXA,GADU,IAEbhH,WAAoB,OAATgH,QAAS,IAATA,OAAA,EAAAA,EAAWhH,YACT,OAATgH,QAAS,IAATA,OAAA,EAAAA,EAAWhH,WAAY8H,EAAMtD,OAC7BsD,EAAMtD,YAGZsD,EAAM7F,SAAQ,SAACiG,EAAGlC,GAChB,IAAMmC,EAAUH,EAAMhC,GACtBkC,EAAEjG,SAAQ,SAACnF,EAAIsL,GACF,MAAPtL,GAAckJ,IAAMoC,GACtBZ,EAAgBW,EAASH,EAAMI,GAAGvH,UAIxC0F,EAAY,WAEZvF,QAAQqD,IAAI,YAGhB,CAAClD,EAAQqG,IAGLa,EAAuB1B,uBAAY,WACvC,OAAO9B,EAAkB1D,KACxB,CAACA,IAEJ,MAAO,CACLA,SACAuF,aACAQ,cACAoB,iBAAkBnH,EAClBiG,UACAhD,WACAoC,cACAC,iBACAc,aACAC,kBACAjB,cACAsB,WACAH,oBACAW,2B,OCxJSE,EAAYtM,IAAOC,IAAV,mGAClBH,GAMSyM,EAAWvM,IAAOC,IAAV,4DAKRuM,EAAYxM,IAAOC,IAAV,kGAClBL,GAMS6M,EAAiBzM,IAAOC,IAAV,0BAEdyM,EAAoB1M,IAAOC,IAAV,0BCIf4K,MAvBf,WACE,IAAM8B,EAAkBC,iBAAO,MACzBC,EAAYD,iBAAO,MAEjBnC,EAAeP,EAAY4C,eAA3BrC,WAYR,OAVAsC,qBAAU,WACHF,EAAUG,SACfvC,EAAWoC,EAAW,cAAe,CACnCvL,MAAOqL,EAAgBK,QAAQC,YAC/B1L,OAAQoL,EAAgBK,QAAQE,aAChCC,gBRhBmB,UQiBnBC,wBAAwB,MAEzB,CAAC3C,IAGF,cAAC8B,EAAD,CAAUc,IAAKV,EAAf,SACE,wBAAQ/H,GAAG,cAAcyI,IAAKR,OC2CrBS,OA7Df,WACE,MAA0BlD,mBAAS,IAAnC,mBAAOmD,EAAP,KAAcC,EAAd,KACA,EAAkCpD,mBAAS,UAA3C,mBAAOqD,EAAP,KAAkBC,EAAlB,KACQ9B,EAAa1B,EAAY4C,eAAzBlB,SAsBR,OACE,eAACa,EAAD,WACE,6CACA,iCACE,iDACA,sBAAKkB,UAAU,qBAAqBC,SArBhB,SAACvG,GAEzBmG,EAAS,IACTE,EAAarG,EAAEE,OAAOgC,QAkBlB,UACE,uBACE5I,KAAK,QACLkN,gBAAc,EACdjJ,GAAG,uBACHkJ,KAAK,mBACLvE,MAAM,WAER,uBAAOwE,QAAQ,uBAAf,8BACA,uBACEpN,KAAK,QACLiE,GAAG,qBACHkJ,KAAK,mBACLvE,MAAM,SAER,uBAAOwE,QAAQ,qBAAf,sBAEF,0BACEC,KAAK,IACLF,KAAK,cACLvE,MAAOgE,EACPK,SA9Ca,SAACvG,GACpBmG,EAASnG,EAAEE,OAAOgC,UA+Cd,wBAAQ5I,KAAK,SAASsN,QAtCP,SAAC5G,GACpBA,EAAE6G,iBACF,IAAMC,EJlBqB,WAAkC,IAAhBZ,EAAe,uDAAP,GACnDa,EAAS,CAAEC,QAAS,WAAYC,OAAQ,QAC5C,GAAa,YAFiD,uDAAzB,UAEd,CACrB,IAAMC,EAAMhB,EACTiB,QAAQ,OAAQ,MAChB7F,OACA8F,MAAM,MACNxF,KAAI,SAACyF,GAAD,OAASA,EAAIF,QAAQ,OAAQ,KAAK7F,OAAO8F,MAAM,QAYtD,GAVAF,EAAII,OAAM,SAACC,EAAK7E,GACd,OAAI6E,EAAIrG,SAAWgG,EAAIhG,SACrB6F,EAAS,CACPC,QAAQ,qCAAD,OAAuCtE,EAAI,EAA3C,oBACPuE,QAAQ,IAEH,OAINF,EAAOE,OAAQ,OAAOF,EAEzBA,EAAS,CACPE,QAAQ,EACRD,QAASE,GAGf,OAAOH,EIRcS,CAAgBpB,EAAWF,GACzCY,EAAWG,QAEd1C,EAAS6B,EAAWU,EAAWE,SAC/Bb,EAAS,KAHasB,MAAMX,EAAWE,UAmCrC,wBCzBOU,OA7Bf,WAA4B,IAAD,EACjB3C,EAAyBlC,EAAY4C,eAArCV,qBACR,EAA8BhC,oBAAS,GAAvC,mBAAO4E,EAAP,KAAgBC,EAAhB,KACMrG,EAAoBgE,iBAAO,MAOjC,OALAG,qBAAU,WACRnE,EAAkBoE,QAAUZ,IAC5B6C,GAAW,KACV,CAACA,EAAY7C,IAGd,cAACM,EAAD,UACGsC,EACC,aAEA,qCACE,uDACA,8BACoB,OAAjBpG,QAAiB,IAAjBA,GAAA,UAAAA,EAAmBoE,eAAnB,eAA4BzE,SAC3BK,EAAkBoE,QAAQ/D,KAAI,SAAC2F,EAAK7E,GAAN,OAC5B,6BAA8B6E,EAAI3F,KAAI,SAACpI,GAAD,OAAQA,EAAK,QAAnD,sBAAwBkJ,e,SCqEzBmF,OAzFf,WACE,MACEhF,EAAY4C,eADN5H,EAAR,EAAQA,OAAQoG,EAAhB,EAAgBA,WAAYnD,EAA5B,EAA4BA,SAAUsD,EAAtC,EAAsCA,kBAEtC,EAAkCrB,mBAASjC,GAA3C,mBAAOgH,EAAP,KAAkBC,EAAlB,KACA,EAAoChF,mBAAS,IAA7C,mBAAOiF,EAAP,KAAmBC,EAAnB,KA8BA,OAtBAvC,qBAAU,WACRqC,GAAa,SAACG,GAAD,mBAAC,eAAeA,GAASpH,QACrC,CAACA,IAEJ4E,qBAAU,WACRuC,EACEpK,EACGK,aACAiK,QACC,gBAAG5K,EAAH,EAAGA,GAAH,MACW,SADX,EAAOjE,MAELiE,IAAOuD,EAASvD,KACfuD,EAASpC,MAAMP,MAAK,qBAAGb,SAAwBC,OAC/CuD,EAAShC,cAAcX,MACtB,gBAAGb,EAAH,EAAGA,OAAH,SAAWhE,OACAqD,EAAkBC,iBAAmBU,IAAWC,QAGhEqE,KAAI,qBAAGrE,SAEX,CAAC0K,EAAenH,EAAUjD,IAG3B,sBAAKyI,UAAU,eAAf,UACE,qCAAQwB,EAAUvK,MAClB,uBAAOmJ,QAAQ,OAAf,mBACA,uBAAOxE,MAAO4F,EAAUxI,KAAMmH,KAAK,OAAOF,SAhCzB,SAACvG,GACpB,IAAMoI,EAAM,gBAAMpI,EAAEE,OAAOuG,KAAOzG,EAAEE,OAAOgC,OAC3C6F,GAAa,SAACG,GAAD,mBAAC,eAAeA,GAASE,MACtCnE,EAAWmE,MA8BT,wCACCtH,EAASpC,MAAMwC,OAAS,GACzBJ,EAAShC,cAAcqJ,QACrB,qBAAG7O,OAAoBqD,EAAkBC,mBACzCsE,OAAS,EACT,+BACGJ,EAASpC,MAAMkD,KAAI,SAAC7D,GAAD,OAClB,+BACGA,EAAKzE,KADR,cACyByE,EAAKT,SADrBS,EAAKT,WAIfwD,EAAShC,cAAc8C,KACtB,SAAC7D,GAAD,OACEA,EAAKzE,OAASqD,EAAkBC,iBAC9B,+BACGmB,EAAKzE,KADR,cACyByE,EAAKT,SADrBS,EAAKT,cAOtB,uDAED0K,EAAW9G,OAAS,EACnB,uBACEmH,SAAU,SAACrI,GACTA,EAAE6G,iBACFzC,EACEtD,EACAd,EAAEE,OAAOoI,qBAAqB,UAAU,GAAGpG,QALjD,UASE,uBAAOwE,QAAQ,OAAf,wBACA,wBAAQD,KAAK,OAAb,SACGuB,EAAWpG,KAAI,SAACvE,GAAD,OACd,wBAAmB6E,MAAO7E,EAA1B,SACGA,GADUA,QAKjB,wBAAQ/D,KAAK,SAAb,yBAGF,kECzDOiP,OAvBf,WACE,IAAQzH,EAAa+B,EAAY4C,eAAzB3E,SAER,OACE,cAACqE,EAAD,UACGrE,EACI,WACC,OAAQA,EAASxH,MACf,IAAK,OACH,OAAO,cAAC,GAAD,IACT,IAAK,QACH,OAAO,cAAC,GAAD,IACT,IAAK,mBACH,OAAO,cAAC,GAAD,IACT,QACE,OAAO,yCATZ,GAYD,6CCXKkP,I,GAAAA,GATf,WACE,OACE,eAACvD,EAAD,WACE,cAAC,GAAD,IACA,cAAC,EAAD,QCLOwD,GAAW9P,IAAOC,IAAV,iKACjBH,EdJsB,WeqCXiQ,OAlCf,WACE,MAAiD7F,EAAY4C,eAArDT,EAAR,EAAQA,eAAgBlB,EAAxB,EAAwBA,QAASb,EAAjC,EAAiCA,YACjC,OACE,eAACwF,GAAD,WACE,wBACE7B,QAAS,kBACP5B,EAAiBlB,IAAYpG,QAAQqD,IAAI,sBAE3CuF,UAAU,aACVqC,UAAW3D,EALb,sBASA,wBACE4B,QAAS,kBACP5B,EACI/B,EAAY,CAAE3J,KAAM,UACpBoE,QAAQqD,IAAI,sBAElBuF,UAAU,aACVqC,UAAW3D,EAPb,uBAWA,wBACE4B,QAAS,kBAAM3D,EAAY,CAAE3J,KAAM,sBACnCgN,UAAU,aAFZ,+BCZSsC,OCbb,eAACC,EAAD,uDAAU,GAAV,OACA,SAACC,GAAD,OACA,SAACC,GAAD,OACEF,EAAOG,QACL,SAACC,EAAWC,GAAZ,OAAsB,cAACA,EAAMC,SAAP,UAAiBF,MACvC,cAACH,EAAD,eAAsBC,ODQbH,CAAU,CAAC/F,GAAX+F,EATf,WACE,OACE,eAAClQ,EAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,UECS0Q,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.8fe17c2a.chunk.js","sourcesContent":["import { css } from \"styled-components\";\r\n\r\nexport const square = (size) => css`\r\n  height: ${size};\r\n  width: ${size};\r\n  min-height: ${size};\r\n  min-width: ${size};\r\n`;\r\n\r\nexport const vFlex = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const hFlex = css`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const center = css`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nexport const vCenter = css`\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translate(0%, -50%);\r\n`;\r\n\r\nexport const hCenter = css`\r\n  position: absolute;\r\n  left: 50%;\r\n  transform: translate(-50%, 0);\r\n`;\r\n\r\nexport const background = (image, fit = \"contain\") => css`\r\n  background: url(${image}) center center / ${fit} no-repeat;\r\n`;\r\n\r\nexport const overlay = css`\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n`;\r\n\r\nexport const singleLineText = css`\r\n  width: 100%;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nexport const horizontalSplit = (parts, spacing) => css`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: flex-start;\r\n\r\n  & > * {\r\n    width: ${(100 - spacing * (parts - 1) * 2) / parts}%;\r\n    margin: 0 ${spacing}%;\r\n\r\n    &:nth-child(${parts}n+1) {\r\n      margin-left: 0;\r\n    }\r\n\r\n    &:nth-child(${parts}n) {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { vFlex } from \"./helpers\";\r\n\r\nexport const AppEl = styled.div`\r\n  ${vFlex}\r\n  align-items: flex-start;\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n","import { fabric } from \"fabric\";\r\n\r\nfabric.Object.prototype.originX = fabric.Object.prototype.originY = \"center\";\r\n\r\nfabric.LineArrow = fabric.util.createClass(fabric.Line, {\r\n  type: \"lineArrow\",\r\n  initialize: function (el, options) {\r\n    options || (options = {});\r\n\r\n    this.callSuper(\"initialize\", el, options);\r\n  },\r\n  toObject: function () {\r\n    return fabric.util.object.extend(this.callSuper(\"toObject\"));\r\n  },\r\n  _render: function (ctx) {\r\n    this.callSuper(\"_render\", ctx);\r\n\r\n    if (this.width === 0 || this.height === 0 || !this.visible) return;\r\n\r\n    ctx.save();\r\n\r\n    var xDiff = this.x2 - this.x1;\r\n    var yDiff = this.y2 - this.y1;\r\n    var angle = Math.atan2(yDiff, xDiff);\r\n    var d = (Math.sqrt(3) / 2) * this.strokeWidth;\r\n    var arrowx = this.x2 + (this.destCurve.a / 2) * Math.cos(angle);\r\n    var arrowy = this.y2 + (this.destCurve.b / 2) * Math.sin(angle);\r\n    var arrow = Math.sqrt((arrowx - this.x2) ** 2 + (arrowy - this.y2) ** 2);\r\n\r\n    ctx.translate(xDiff / 2, yDiff / 2);\r\n    ctx.rotate(angle);\r\n    ctx.beginPath();\r\n    ctx.moveTo(d - arrow, 0);\r\n    ctx.lineTo(-3 * d - arrow, (5 / 2) * d);\r\n    ctx.lineTo(-3 * d - arrow, (-5 / 2) * d);\r\n    ctx.closePath();\r\n    ctx.fillStyle = this.stroke;\r\n    ctx.fill();\r\n\r\n    ctx.restore();\r\n  },\r\n});\r\n\r\nfabric.LineArrow.fromObject = function (object, callback) {\r\n  callback &&\r\n    callback(\r\n      new fabric.LineArrow([object.x1, object.y1, object.x2, object.y2], object)\r\n    );\r\n};\r\n\r\nfabric.LineArrow.async = true;\r\n\r\nexport default fabric;\r\n","export const constants = {\r\n  UNDIRECTED_EDGE: \"Undirected\",\r\n  DIRECTED_EDGE: \"Directed\",\r\n};\r\n\r\nexport const defaultNode = {\r\n  radius: 20,\r\n};\r\n\r\nexport const initCanvasState = {\r\n  nodeCount: 0,\r\n};\r\n\r\nexport const nodeUpdateOptions = {\r\n  UNDIRECTED_EDGE: constants.UNDIRECTED_EDGE,\r\n  DIRECTED_EDGE: constants.DIRECTED_EDGE,\r\n};\r\n","export const lightGray = \"#F2F2F2\";\r\nexport const grayBorder = \"#BFBFBF\";\r\nexport const gray = \"#808080\";\r\n","export const getRandomNumberInterval = (min = 0, max = 1) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nexport const getNodeNumber = (node) => {\r\n  let nodeId = typeof node === \"string\" ? node : node?.id;\r\n  if (!nodeId) {\r\n    console.error(\"Invalid node\");\r\n    return -1;\r\n  }\r\n  return parseInt(nodeId.match(/[^-]*$/g)[0]);\r\n};\r\n","import { nodeUpdateOptions } from \"../../../../../data/config\";\r\nimport fabric from \"../../../../../modules/fabric\";\r\n\r\nexport const createEdge = (canvas, { edge: childId, node, type }) => {\r\n  const p = node;\r\n  const c = canvas.getObjects().find(({ id }) => id === childId);\r\n  let edge = null;\r\n  const edgeOptions = {\r\n    fill: \"red\",\r\n    stroke: \"red\",\r\n    strokeWidth: 5,\r\n    selectable: false,\r\n    type,\r\n    evented: false,\r\n    destCurve: { a: c.width, b: c.height },\r\n  };\r\n\r\n  if (type === nodeUpdateOptions.DIRECTED_EDGE) {\r\n    edge = new fabric.LineArrow([p.left, p.top, c.left, c.top], edgeOptions);\r\n  } else {\r\n    edge = new fabric.Line([p.left, p.top, c.left, c.top], edgeOptions);\r\n  }\r\n\r\n  return edge;\r\n};\r\n\r\nexport const moveEdge = (node) => {\r\n  node.edges.forEach(({ line }) => line.set({ x1: node.left, y1: node.top }));\r\n  node.incomingEdges.forEach(({ line }) =>\r\n    line.set({ x2: node.left, y2: node.top })\r\n  );\r\n};\r\n","import { gray } from \"../../../../../elements/colorSchema\";\r\nimport { getRandomNumberInterval } from \"../../../../../helpers/misc\";\r\nimport fabric from \"../../../../../modules/fabric\";\r\nimport { createEdge, moveEdge } from \"./edge\";\r\n\r\nexport const createNode = (canvas, { id, title }) => {\r\n  const canvasBoundaries = canvas.vptCoords.br;\r\n  const radius = 30;\r\n\r\n  const circle = new fabric.Circle({\r\n    radius: radius,\r\n    fill: gray,\r\n    originX: \"center\",\r\n    originY: \"center\",\r\n  });\r\n  const text = new fabric.Text(title.toString(), {\r\n    fontSize: 20,\r\n    originX: \"center\",\r\n    originY: \"center\",\r\n  });\r\n\r\n  const grp = new fabric.Group([circle, text], {\r\n    left: getRandomNumberInterval(radius, canvasBoundaries.x - radius),\r\n    top: getRandomNumberInterval(radius, canvasBoundaries.y - radius),\r\n    type: \"node\",\r\n    id,\r\n    text: title,\r\n    edges: [], //Each edge -> {nodeId: \"\", line: lineData}\r\n    incomingEdges: [],\r\n    controls: false,\r\n  });\r\n\r\n  grp\r\n    .on(\"selected\", function (e) {\r\n      canvas.fire(\"custom:update\", e.target);\r\n      canvas.fire(\"node:selection\", e.target);\r\n    })\r\n    .on(\"deselected\", function (e) {\r\n      canvas.fire(\"node:deselection\", e.target);\r\n      canvas.fire(\"custom:deselection\", e.target);\r\n    })\r\n    .on(\"scaling\", function (e) {\r\n      canvas.fire(\"custom:update\", e.target);\r\n    })\r\n    .on(\"moving\", function (e) {\r\n      canvas.fire(\"node:moving\", e.transform.target);\r\n    });\r\n\r\n  return grp;\r\n};\r\n\r\nexport const updateNodeData = (canvas, data = {}) => {\r\n  const node = data?.node || canvas.getActiveObject();\r\n\r\n  switch (Object.keys(data)[0]) {\r\n    case \"text\":\r\n      node.item(1).set(data);\r\n      node.set(data);\r\n      return;\r\n    case \"move\":\r\n      moveEdge(node);\r\n      canvas.renderAll();\r\n      return;\r\n    case \"edge\":\r\n      const edge = createEdge(canvas, data);\r\n      node.edges.push({ nodeId: data.edge, type: data.type, line: edge });\r\n      const node2 = canvas.getObjects().find(({ id }) => id === data.edge);\r\n      node2.incomingEdges.push({\r\n        nodeId: node.id,\r\n        type: data.type,\r\n        line: edge,\r\n      });\r\n      canvas.fire(\"custom:update\", node);\r\n      canvas.add(edge).sendToBack(edge).renderAll();\r\n      return;\r\n    case \"selected\":\r\n      node.item(0).set({ fill: data.selected ? \"red\" : gray });\r\n      canvas.renderAll();\r\n      return;\r\n    default:\r\n      console.log(\"tf u doing\");\r\n      return;\r\n  }\r\n};\r\n","class Stack {\r\n  constructor() {\r\n    this.items = [];\r\n  }\r\n\r\n  push(el) {\r\n    this.items.push(el);\r\n  }\r\n\r\n  pop() {\r\n    if (this.items.length === 0) {\r\n      console.error(\"ERROR: stack empty\");\r\n      return null;\r\n    }\r\n    return this.items.pop();\r\n  }\r\n\r\n  top() {\r\n    if (this.items.length === 0) {\r\n      console.error(\"ERROR: stack empty\");\r\n      return null;\r\n    }\r\n    return this.items.slice(-1)[0];\r\n  }\r\n\r\n  isEmpty() {\r\n    return this.items.length === 0;\r\n  }\r\n\r\n  print() {\r\n    let str = \"\";\r\n    this.items.forEach((el) => (str += el + \" \"));\r\n    return str.trim();\r\n  }\r\n\r\n  size() {\r\n    return this.items.length;\r\n  }\r\n}\r\n\r\nexport default Stack;\r\n","import { constants } from \"../data/config\";\r\nimport Stack from \"../modules/stack\";\r\nimport { getNodeNumber } from \"./misc\";\r\n\r\nexport const checkGraphInput = (type = \"ADJMAT\", input = \"\") => {\r\n  let output = { message: \"all good\", status: \"true\" };\r\n  if (type === \"ADJMAT\") {\r\n    const mat = input\r\n      .replace(/\\n+/g, \"\\n\")\r\n      .trim()\r\n      .split(\"\\n\")\r\n      .map((arr) => arr.replace(/\\s+/g, \" \").trim().split(\" \"));\r\n\r\n    mat.every((row, i) => {\r\n      if (row.length !== mat.length) {\r\n        output = {\r\n          message: `Please input a square matrix. Row ${i + 1} of invalid size`,\r\n          status: false,\r\n        };\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n    if (!output.status) return output;\r\n    else\r\n      output = {\r\n        status: true,\r\n        message: mat,\r\n      };\r\n  }\r\n  return output;\r\n};\r\n\r\nconst getAdjacencyMatrix = (canvas) => {\r\n  const n = canvas.getObjects(\"node\").length;\r\n  let g = [...Array(n)].map((e) => Array(n).fill(0));\r\n\r\n  canvas.getObjects(\"node\").forEach((node) => {\r\n    const p = getNodeNumber(node) - 1;\r\n    node.edges.forEach(({ type, nodeId }) => {\r\n      const c = getNodeNumber(nodeId) - 1;\r\n      g[p][c] = 1;\r\n      if (type === constants.UNDIRECTED_EDGE) g[c][p] = 1;\r\n    });\r\n  });\r\n\r\n  return g;\r\n};\r\n\r\nconst fundamentalCircuit = (pred = [], start, end) => {\r\n  if (typeof start !== \"number\" || typeof end !== \"number\") {\r\n    console.error(\"Expected a number value for current node.\");\r\n    return [];\r\n  }\r\n  let ans = [];\r\n  let i = start;\r\n\r\n  while (i !== pred[end]) {\r\n    ans.push(i + 1);\r\n    i = pred[i];\r\n  }\r\n  ans.push(pred[end] + 1);\r\n  ans.push(end + 1);\r\n\r\n  return ans;\r\n};\r\n\r\nexport const fundamentalMatrix = (canvas) => {\r\n  let X = getAdjacencyMatrix(canvas);\r\n  let TW = new Stack();\r\n  let level = new Array(X.length).fill(-1);\r\n  let pred = new Array(X.length);\r\n  let ans = [];\r\n\r\n  level.forEach((value, root) => {\r\n    if (value === -1) {\r\n      TW.push(root);\r\n      let T = [root];\r\n      level[root] = pred[root] = 0;\r\n      while (!TW.isEmpty()) {\r\n        const z = TW.pop();\r\n        X[z].forEach((edge, p) => {\r\n          if (Boolean(edge)) {\r\n            if (T.indexOf(p) === -1) {\r\n              pred[p] = z;\r\n              level[p] = level[z] + 1;\r\n              T.push(p);\r\n              TW.push(p);\r\n            } else ans.push(fundamentalCircuit(pred, z, p));\r\n            X[z][p] = X[p][z] = 0;\r\n          }\r\n        });\r\n      }\r\n    }\r\n  });\r\n\r\n  return ans;\r\n};\r\n","import { useCallback, useState } from \"react\";\r\nimport { createContainer } from \"unstated-next\";\r\nimport fabric from \"../modules/fabric\";\r\nimport {\r\n  defaultNode,\r\n  initCanvasState,\r\n  nodeUpdateOptions,\r\n} from \"../data/config\";\r\nimport {\r\n  createNode,\r\n  updateNodeData,\r\n} from \"../components/content/components/canvas/components/node\";\r\nimport { fundamentalMatrix } from \"../helpers/graph\";\r\n\r\nconst CanvasStore = createContainer(() => {\r\n  const [canvas, setCanvas] = useState(null);\r\n  const [selected, setSelected] = useState(null);\r\n  const [canvasState, setCanvasState] = useState(initCanvasState);\r\n\r\n  const initCanvas = useCallback((node, canvasId, canvasOptions) => {\r\n    if (!!node) {\r\n      var canvas = new fabric.Canvas(canvasId, canvasOptions);\r\n\r\n      canvas.on(\"custom:update\", (option) =>\r\n        setSelected((prevState) =>\r\n          prevState ? { ...prevState, ...option } : option\r\n        )\r\n      );\r\n      canvas.on(\"node:selection\", (option) =>\r\n        updateNodeData(canvas, { selected: true, node: option })\r\n      );\r\n      canvas.on(\"custom:deselection\", () => setSelected(null));\r\n      canvas.on(\"node:deselection\", (option) =>\r\n        updateNodeData(canvas, { selected: false, node: option })\r\n      );\r\n      canvas.on(\"node:moving\", (option) =>\r\n        updateNodeData(canvas, { move: true, node: option })\r\n      );\r\n      setCanvas(canvas);\r\n    }\r\n  }, []);\r\n\r\n  const resetCanvas = useCallback(() => {\r\n    canvas.dispose();\r\n    // setCanvas(null);\r\n    // // eslint-disable-next-line\r\n  }, [canvas]);\r\n\r\n  const addNode = useCallback(\r\n    (options = defaultNode) => {\r\n      if (canvas) {\r\n        const newNode = createNode(canvas, {\r\n          id: `node-${canvasState.nodeCount + 1}`,\r\n          title: options?.title || canvasState.nodeCount + 1,\r\n        });\r\n\r\n        canvas.add(newNode).setActiveObject(newNode);\r\n        setCanvasState({\r\n          ...canvasState,\r\n          nodeCount: canvasState.nodeCount + 1,\r\n        });\r\n      }\r\n      return;\r\n    },\r\n    [canvas, canvasState, setCanvasState]\r\n  );\r\n\r\n  const updateNode = useCallback(\r\n    (data) => {\r\n      if (canvas) {\r\n        updateNodeData(canvas, data);\r\n        canvas.renderAll();\r\n      }\r\n    },\r\n    [canvas]\r\n  );\r\n\r\n  const addDirectedEdge = useCallback(\r\n    (parent, target) => {\r\n      updateNode({\r\n        edge: target,\r\n        node: parent,\r\n        type: nodeUpdateOptions.DIRECTED_EDGE,\r\n      });\r\n    },\r\n    [updateNode]\r\n  );\r\n\r\n  const addUndirectedEdge = useCallback(\r\n    (src, dest) => {\r\n      updateNode({\r\n        edge: dest,\r\n        node: src,\r\n        type: nodeUpdateOptions.UNDIRECTED_EDGE,\r\n      });\r\n    },\r\n    [updateNode]\r\n  );\r\n\r\n  const addGraph = useCallback(\r\n    (type, graph = []) => {\r\n      if (type === \"ADJMAT\") {\r\n        const prevNodeCount = canvas.getObjects(\"node\").length;\r\n        let nodes = [];\r\n\r\n        [...Array(graph.length)].forEach((_, i) => {\r\n          const newNode = createNode(canvas, {\r\n            id: `node-${prevNodeCount + i + 1}`,\r\n            title: prevNodeCount + i + 1,\r\n          });\r\n\r\n          canvas.add(newNode);\r\n          nodes.push(newNode);\r\n        });\r\n        setCanvasState((prevState) => ({\r\n          ...prevState,\r\n          nodeCount: prevState?.nodeCount\r\n            ? prevState?.nodeCount + graph.length\r\n            : graph.length,\r\n        }));\r\n\r\n        graph.forEach((r, i) => {\r\n          const curNode = nodes[i];\r\n          r.forEach((el, j) => {\r\n            if (el !== \"0\" && i !== j) {\r\n              addDirectedEdge(curNode, nodes[j].id);\r\n            }\r\n          });\r\n        });\r\n        setSelected(null);\r\n      } else {\r\n        console.log(\"Jld hi\");\r\n      }\r\n    },\r\n    [canvas, addDirectedEdge]\r\n  );\r\n\r\n  const getFundamentalMatrix = useCallback(() => {\r\n    return fundamentalMatrix(canvas);\r\n  }, [canvas]);\r\n\r\n  return {\r\n    canvas,\r\n    initCanvas,\r\n    resetCanvas,\r\n    isCanvasActive: !!canvas,\r\n    addNode,\r\n    selected,\r\n    canvasState,\r\n    setCanvasState,\r\n    updateNode,\r\n    addDirectedEdge,\r\n    setSelected,\r\n    addGraph,\r\n    addUndirectedEdge,\r\n    getFundamentalMatrix,\r\n  };\r\n});\r\n\r\nexport default CanvasStore;\r\n","import styled from \"styled-components\";\r\nimport { hFlex, vFlex } from \"../../../elements/helpers\";\r\n\r\nexport const ContentEl = styled.div`\r\n  ${hFlex}\r\n  width: 100%;\r\n  justify-content: flex-start;\r\n  height: 100%;\r\n`;\r\n\r\nexport const CanvasEl = styled.div`\r\n  width: 75%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const SidebarEl = styled.div`\r\n  ${vFlex}\r\n  width: 25%;\r\n  height: 100%;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nexport const GraphOptionsEl = styled.div``;\r\n\r\nexport const GraphPropertiesEl = styled.div``;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { lightGray } from \"../../../../elements/colorSchema\";\r\nimport CanvasStore from \"../../../../stores/canvasStore\";\r\nimport { CanvasEl } from \"../../elements\";\r\n\r\nfunction Canvas() {\r\n  const canvasContainer = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  const { initCanvas } = CanvasStore.useContainer();\r\n\r\n  useEffect(() => {\r\n    if (!canvasRef.current) return;\r\n    initCanvas(canvasRef, \"main-canvas\", {\r\n      width: canvasContainer.current.clientWidth,\r\n      height: canvasContainer.current.clientHeight,\r\n      backgroundColor: lightGray,\r\n      preserveObjectStacking: true,\r\n    });\r\n  }, [initCanvas]);\r\n\r\n  return (\r\n    <CanvasEl ref={canvasContainer}>\r\n      <canvas id=\"main-canvas\" ref={canvasRef} />\r\n    </CanvasEl>\r\n  );\r\n}\r\n\r\nexport default Canvas;\r\n","import React, { useState } from \"react\";\r\nimport { checkGraphInput } from \"../../../../../helpers/graph\";\r\nimport CanvasStore from \"../../../../../stores/canvasStore\";\r\nimport { GraphOptionsEl } from \"../../../elements\";\r\n\r\nfunction GraphOptions() {\r\n  const [input, setInput] = useState(\"\");\r\n  const [inputType, setInputType] = useState(\"ADJMAT\");\r\n  const { addGraph } = CanvasStore.useContainer();\r\n\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const setGraphInputType = (e) => {\r\n    //TO DO: Change current input to diff form\r\n    setInput(\"\");\r\n    setInputType(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const inputCheck = checkGraphInput(inputType, input);\r\n    if (!inputCheck.status) alert(inputCheck.message);\r\n    else {\r\n      addGraph(inputType, inputCheck.message);\r\n      setInput(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GraphOptionsEl>\r\n      <h3>Add a graph</h3>\r\n      <form>\r\n        <p>Graph Input Type</p>\r\n        <div className=\"graph-input-select\" onChange={setGraphInputType}>\r\n          <input\r\n            type=\"radio\"\r\n            defaultChecked\r\n            id=\"graph-option-adj-mat\"\r\n            name=\"graph-input-type\"\r\n            value=\"ADJMAT\"\r\n          />\r\n          <label htmlFor=\"graph-option-adj-mat\">Adjacency Matrix</label>\r\n          <input\r\n            type=\"radio\"\r\n            id=\"graph-option-edges\"\r\n            name=\"graph-input-type\"\r\n            value=\"EDGE\"\r\n          />\r\n          <label htmlFor=\"graph-option-edges\">Edges</label>\r\n        </div>\r\n        <textarea\r\n          rows=\"4\"\r\n          name=\"graph-input\"\r\n          value={input}\r\n          onChange={handleChange}\r\n        />\r\n        <button type=\"submit\" onClick={handleSubmit}>\r\n          Add\r\n        </button>\r\n      </form>\r\n    </GraphOptionsEl>\r\n  );\r\n}\r\n\r\nexport default GraphOptions;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport CanvasStore from \"../../../../../stores/canvasStore\";\r\nimport { GraphPropertiesEl } from \"../../../elements\";\r\n\r\nfunction GraphProperties() {\r\n  const { getFundamentalMatrix } = CanvasStore.useContainer();\r\n  const [loading, setLoading] = useState(true);\r\n  const fundamentalMatrix = useRef(null);\r\n\r\n  useEffect(() => {\r\n    fundamentalMatrix.current = getFundamentalMatrix();\r\n    setLoading(false);\r\n  }, [setLoading, getFundamentalMatrix]);\r\n\r\n  return (\r\n    <GraphPropertiesEl>\r\n      {loading ? (\r\n        \"loading...\"\r\n      ) : (\r\n        <>\r\n          <h3>Fundamental Circuits:</h3>\r\n          <ul>\r\n            {fundamentalMatrix?.current?.length &&\r\n              fundamentalMatrix.current.map((row, i) => (\r\n                <li key={`fundamental-${i}`}>{row.map((el) => el + \" \")}</li>\r\n              ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </GraphPropertiesEl>\r\n  );\r\n}\r\n\r\nexport default GraphProperties;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { nodeUpdateOptions } from \"../../../../../data/config\";\r\nimport CanvasStore from \"../../../../../stores/canvasStore\";\r\n\r\nfunction NodeOptions() {\r\n  const { canvas, updateNode, selected, addUndirectedEdge } =\r\n    CanvasStore.useContainer();\r\n  const [nodeState, setNodeState] = useState(selected);\r\n  const [otherNodes, setOtherNodes] = useState([]);\r\n\r\n  const handleChange = (e) => {\r\n    const update = { [e.target.name]: e.target.value };\r\n    setNodeState((prev) => ({ ...prev, ...update }));\r\n    updateNode(update);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setNodeState((prev) => ({ ...prev, ...selected }));\r\n  }, [selected]);\r\n\r\n  useEffect(() => {\r\n    setOtherNodes(\r\n      canvas\r\n        .getObjects()\r\n        .filter(\r\n          ({ id, type }) =>\r\n            type === \"node\" &&\r\n            id !== selected.id &&\r\n            !selected.edges.find(({ nodeId }) => nodeId === id) &&\r\n            !selected.incomingEdges.find(\r\n              ({ nodeId, type }) =>\r\n                type === nodeUpdateOptions.UNDIRECTED_EDGE && nodeId === id\r\n            )\r\n        )\r\n        .map(({ id }) => id)\r\n    );\r\n  }, [setOtherNodes, selected, canvas]);\r\n\r\n  return (\r\n    <div className=\"node-options\">\r\n      <p>Id: {nodeState.id}</p>\r\n      <label htmlFor=\"text\">Name:</label>\r\n      <input value={nodeState.text} name=\"text\" onChange={handleChange} />\r\n      <h5>Edges:</h5>\r\n      {selected.edges.length > 0 ||\r\n      selected.incomingEdges.filter(\r\n        ({ type }) => type === nodeUpdateOptions.UNDIRECTED_EDGE\r\n      ).length > 0 ? (\r\n        <ul>\r\n          {selected.edges.map((edge) => (\r\n            <li key={edge.nodeId}>\r\n              {edge.type} edge with {edge.nodeId}\r\n            </li>\r\n          ))}\r\n          {selected.incomingEdges.map(\r\n            (edge) =>\r\n              edge.type === nodeUpdateOptions.UNDIRECTED_EDGE && (\r\n                <li key={edge.nodeId}>\r\n                  {edge.type} edge with {edge.nodeId}\r\n                </li>\r\n              )\r\n          )}\r\n        </ul>\r\n      ) : (\r\n        <p>No edges for this node</p>\r\n      )}\r\n      {otherNodes.length > 0 ? (\r\n        <form\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            addUndirectedEdge(\r\n              selected,\r\n              e.target.getElementsByTagName(\"select\")[0].value\r\n            );\r\n          }}\r\n        >\r\n          <label htmlFor=\"edge\">Add edge: </label>\r\n          <select name=\"edge\">\r\n            {otherNodes.map((node) => (\r\n              <option key={node} value={node}>\r\n                {node}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <button type=\"submit\">Add Edge</button>\r\n        </form>\r\n      ) : (\r\n        <p>No node available for an edge</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NodeOptions;\r\n","import React from \"react\";\r\nimport CanvasStore from \"../../../../stores/canvasStore\";\r\nimport { SidebarEl } from \"../../elements\";\r\nimport GraphOptions from \"./components/graphOptions\";\r\nimport GraphProperties from \"./components/graphProperties\";\r\nimport NodeOptions from \"./components/nodeOptions\";\r\n\r\nfunction Sidebar() {\r\n  const { selected } = CanvasStore.useContainer();\r\n\r\n  return (\r\n    <SidebarEl>\r\n      {selected\r\n        ? (() => {\r\n            switch (selected.type) {\r\n              case \"node\":\r\n                return <NodeOptions />;\r\n              case \"graph\":\r\n                return <GraphOptions />;\r\n              case \"graph-properties\":\r\n                return <GraphProperties />;\r\n              default:\r\n                return <div>Error</div>;\r\n            }\r\n          })()\r\n        : \"Select an object to view its properties\"}\r\n    </SidebarEl>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport Canvas from \"./components/canvas\";\r\nimport Sidebar from \"./components/sidebar\";\r\nimport { ContentEl } from \"./elements\";\r\n\r\nfunction Content() {\r\n  return (\r\n    <ContentEl>\r\n      <Sidebar />\r\n      <Canvas />\r\n    </ContentEl>\r\n  );\r\n}\r\n\r\nexport default Content;\r\n","import styled from \"styled-components\";\r\nimport { grayBorder } from \"../../../elements/colorSchema\";\r\nimport { hFlex } from \"../../../elements/helpers\";\r\n\r\nexport const NavbarEl = styled.div`\r\n  ${hFlex}\r\n  box-sizing: border-box;\r\n  padding: 1em;\r\n  width: 100%;\r\n  justify-content: flex-start;\r\n  border-bottom: 1px solid ${grayBorder};\r\n`;\r\n","import React from \"react\";\r\nimport CanvasStore from \"../../stores/canvasStore\";\r\nimport { NavbarEl } from \"./elements/index\";\r\n\r\nfunction Navbar() {\r\n  const { isCanvasActive, addNode, setSelected } = CanvasStore.useContainer();\r\n  return (\r\n    <NavbarEl>\r\n      <button\r\n        onClick={() =>\r\n          isCanvasActive ? addNode() : console.log(\"Canvas not loaded\")\r\n        }\r\n        className=\"navbar-btn\"\r\n        disabled={!isCanvasActive}\r\n      >\r\n        Add Node\r\n      </button>\r\n      <button\r\n        onClick={() =>\r\n          isCanvasActive\r\n            ? setSelected({ type: \"graph\" })\r\n            : console.log(\"Canvas not loaded\")\r\n        }\r\n        className=\"navbar-btn\"\r\n        disabled={!isCanvasActive}\r\n      >\r\n        Add Graph\r\n      </button>\r\n      <button\r\n        onClick={() => setSelected({ type: \"graph-properties\" })}\r\n        className=\"navbar-btn\"\r\n      >\r\n        Process graph\r\n      </button>\r\n    </NavbarEl>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { AppEl } from \"../elements/app\";\r\nimport CanvasStore from \"../stores/canvasStore\";\r\nimport { withStore } from \"../utils/withStore\";\r\nimport Content from \"./content\";\r\nimport Navbar from \"./navbar\";\r\n\r\nfunction App() {\r\n  return (\r\n    <AppEl>\r\n      <Navbar />\r\n      <Content />\r\n    </AppEl>\r\n  );\r\n}\r\n\r\nexport default withStore([CanvasStore])(App);\r\n","import React from \"react\";\r\n\r\nexport const withStore =\r\n  (stores = []) =>\r\n  (WrappedComponent) =>\r\n  (props) =>\r\n    stores.reduce(\r\n      (component, Store) => <Store.Provider>{component}</Store.Provider>,\r\n      <WrappedComponent {...props} />\r\n    );\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}