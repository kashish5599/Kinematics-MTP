{"version":3,"sources":["modules/string.js","elements/helpers.js","elements/app.js","modules/fabric/index.js","data/config.js","elements/colorSchema.js","helpers/misc.js","helpers/edge.js","modules/stack.js","helpers/graph.js","components/content/components/canvas/components/node.js","components/content/components/canvas/components/edge.js","stores/canvasStore.js","components/content/elements/index.js","components/content/components/canvas/index.js","modules/equationSolver.js","components/content/components/sidebar/components/equations.js","components/content/components/sidebar/components/graphOptions.js","components/content/components/sidebar/components/graphProperties.js","components/content/components/sidebar/components/node/components/edges.js","components/content/components/sidebar/components/node/components/info.js","components/content/components/sidebar/components/node/index.js","components/content/components/sidebar/index.js","components/content/index.js","components/navbar/elements/index.js","components/navbar/index.js","components/index.js","utils/withStore.js","reportWebVitals.js","index.js"],"names":["String","prototype","replaceAt","index","replacement","this","substring","length","bitAND","s","parseInt","toString","bitOR","bitXOR","vFlex","css","hFlex","AppEl","styled","div","fabric","Object","originX","originY","LineArrow","util","createClass","Line","type","initialize","el","options","callSuper","toObject","object","extend","_render","ctx","width","height","visible","save","xDiff","x2","x1","yDiff","y2","y1","angle","Math","atan2","d","sqrt","strokeWidth","arrowx","destCurve","a","cos","arrowy","b","sin","arrow","translate","rotate","beginPath","moveTo","lineTo","closePath","fillStyle","stroke","fill","restore","fromObject","callback","async","UNDIRECTED_EDGE","DIRECTED_EDGE","defaultNode","radius","gray","getRandomNumberInterval","min","max","floor","random","getNodeNumber","node","nodeId","id","match","console","error","getNodeFromNN","canvas","nn","getObjects","find","getEdgeAngle","source","target","nn1","nn2","atan","PI","title","value","getEdgeFromNN","n1","n2","op1","op2","edgeId","edgeNodeMap","getEdgeLength","Stack","items","push","pop","slice","str","forEach","trim","fundamentalMatrix","X","n","g","Array","map","e","entries","ids","split","getAdjacencyMatrix","TW","level","pred","ans","root","T","z","edge","p","Boolean","indexOf","start","end","i","fundamentalCircuit","isEmpty","createNode","canvasBoundaries","vptCoords","br","circle","Circle","text","Text","fontSize","grp","Group","left","x","top","y","edges","incomingEdges","isGrounded","controls","on","fire","transform","updateNodeData","action","data","getActiveObject","item","set","moveEdge","renderAll","c","edgeOptions","selectable","eangle","evented","createEdge","add","sendToBack","selected","log","CanvasStore","createContainer","useState","setCanvas","setSelected","initCanvas","useCallback","canvasId","canvasOptions","Canvas","option","prevState","resetCanvas","dispose","addNode","newNode","nodeCount","setActiveObject","updateNode","addEdge","src","dest","edgeCount","addGraph","graph","prevNodeCount","nodes","_","r","curNode","j","getFundamentalMatrix","generateEquations","filter","alert","isCanvasActive","ContentEl","CanvasEl","SidebarEl","GraphOptionsEl","GraphPropertiesEl","EquationsEl","canvasContainer","useRef","canvasRef","useContainer","useEffect","current","clientWidth","clientHeight","backgroundColor","preserveObjectStacking","ref","EquationSolver","setEdgeAngles","fm","eq","N","si","o","t","sign","Equations","loading","setLoading","equations","ind","concat","GraphOptions","input","setInput","inputType","rows","name","onChange","onClick","preventDefault","inputCheck","output","message","status","mat","replace","arr","every","row","checkGraphInput","GraphProperties","Edges","otherNodes","onSubmit","getElementsByTagName","htmlFor","NodeInfo","label","handleChange","data-action","checked","NodeOptions","nodeState","setNodeState","setOtherNodes","prev","nodeIds","reduce","curr","className","update","getAttribute","Sidebar","Content","NavbarEl","Navbar","disabled","withStore","stores","WrappedComponent","props","component","Store","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","require","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67f57d6a.chunk.js","sourcesContent":["// eslint-disable-next-line no-extend-native\r\nString.prototype.replaceAt = function (index, replacement) {\r\n  return (\r\n    this.substring(0, index) +\r\n    replacement +\r\n    this.substring(index + replacement.length)\r\n  );\r\n};\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.bitAND = function (s) {\r\n  return (parseInt(this, 2) & parseInt(s, 2)).toString(2);\r\n};\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.bitOR = function (s) {\r\n  return (parseInt(this, 2) | parseInt(s, 2)).toString(2);\r\n};\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.bitXOR = function (s) {\r\n  return (parseInt(this, 2) ^ parseInt(s, 2)).toString(2);\r\n};\r\n","import { css } from \"styled-components\";\r\n\r\nexport const square = (size) => css`\r\n  height: ${size};\r\n  width: ${size};\r\n  min-height: ${size};\r\n  min-width: ${size};\r\n`;\r\n\r\nexport const vFlex = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const hFlex = css`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const center = css`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nexport const vCenter = css`\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translate(0%, -50%);\r\n`;\r\n\r\nexport const hCenter = css`\r\n  position: absolute;\r\n  left: 50%;\r\n  transform: translate(-50%, 0);\r\n`;\r\n\r\nexport const background = (image, fit = \"contain\") => css`\r\n  background: url(${image}) center center / ${fit} no-repeat;\r\n`;\r\n\r\nexport const overlay = css`\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n`;\r\n\r\nexport const singleLineText = css`\r\n  width: 100%;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nexport const horizontalSplit = (parts, spacing) => css`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: flex-start;\r\n\r\n  & > * {\r\n    width: ${(100 - spacing * (parts - 1) * 2) / parts}%;\r\n    margin: 0 ${spacing}%;\r\n\r\n    &:nth-child(${parts}n+1) {\r\n      margin-left: 0;\r\n    }\r\n\r\n    &:nth-child(${parts}n) {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { vFlex } from \"./helpers\";\r\n\r\nexport const AppEl = styled.div`\r\n  ${vFlex}\r\n  align-items: flex-start;\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n","import { fabric } from \"fabric\";\r\n\r\nfabric.Object.prototype.originX = fabric.Object.prototype.originY = \"center\";\r\n\r\nfabric.LineArrow = fabric.util.createClass(fabric.Line, {\r\n  type: \"lineArrow\",\r\n  initialize: function (el, options) {\r\n    options || (options = {});\r\n\r\n    this.callSuper(\"initialize\", el, options);\r\n  },\r\n  toObject: function () {\r\n    return fabric.util.object.extend(this.callSuper(\"toObject\"));\r\n  },\r\n  _render: function (ctx) {\r\n    this.callSuper(\"_render\", ctx);\r\n\r\n    if (this.width === 0 || this.height === 0 || !this.visible) return;\r\n\r\n    ctx.save();\r\n\r\n    var xDiff = this.x2 - this.x1;\r\n    var yDiff = this.y2 - this.y1;\r\n    var angle = Math.atan2(yDiff, xDiff);\r\n    var d = (Math.sqrt(3) / 2) * this.strokeWidth;\r\n    var arrowx = this.x2 + (this.destCurve.a / 2) * Math.cos(angle);\r\n    var arrowy = this.y2 + (this.destCurve.b / 2) * Math.sin(angle);\r\n    var arrow = Math.sqrt((arrowx - this.x2) ** 2 + (arrowy - this.y2) ** 2);\r\n\r\n    ctx.translate(xDiff / 2, yDiff / 2);\r\n    ctx.rotate(angle);\r\n    ctx.beginPath();\r\n    ctx.moveTo(d - arrow, 0);\r\n    ctx.lineTo(-3 * d - arrow, (5 / 2) * d);\r\n    ctx.lineTo(-3 * d - arrow, (-5 / 2) * d);\r\n    ctx.closePath();\r\n    ctx.fillStyle = this.stroke;\r\n    ctx.fill();\r\n\r\n    ctx.restore();\r\n  },\r\n});\r\n\r\nfabric.LineArrow.fromObject = function (object, callback) {\r\n  callback &&\r\n    callback(\r\n      new fabric.LineArrow([object.x1, object.y1, object.x2, object.y2], object)\r\n    );\r\n};\r\n\r\nfabric.LineArrow.async = true;\r\n\r\nexport default fabric;\r\n","export const UNDIRECTED_EDGE = \"Undirected\";\r\nexport const DIRECTED_EDGE = \"Directed\";\r\n\r\nexport const defaultNode = {\r\n  radius: 20,\r\n};\r\n","export const lightGray = \"#F2F2F2\";\r\nexport const grayBorder = \"#BFBFBF\";\r\nexport const gray = \"#808080\";\r\n","export const getRandomNumberInterval = (min = 0, max = 1) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nexport const getNodeNumber = (node) => {\r\n  let nodeId = typeof node === \"string\" ? node : node?.id;\r\n  if (!nodeId) {\r\n    console.error(\"Invalid node\");\r\n    return -1;\r\n  }\r\n  return parseInt(nodeId.match(/[^-]*$/g)[0]);\r\n};\r\n\r\nexport const getNodes = (canvas) => {\r\n  return canvas.getObjects().filter(({ type }) => type === \"node\");\r\n};\r\n\r\nexport const getNodeFromNN = (canvas, nn) =>\r\n  canvas.getObjects(\"node\").find(({ id }) => id === `node-${nn}`);\r\n\r\n//Takes nodenumbers and return edge length b/w them else returns -1\r\nexport const getEdge = (canvas, nn1, nn2) => {\r\n  const edges = canvas\r\n    .getObjects(\"node\")\r\n    .filter(({ id }) => id === `node-${nn1}`)[0]\r\n    .edges.filter(\r\n      ({ source, target }) =>\r\n        source === `node-${nn2}` || target === `node-${nn2}`\r\n    );\r\n  if (edges.length < 1) return null;\r\n  return edges[0];\r\n};\r\n\r\nfunction dfs_cycle(u, p, color, mark, par, graph, cyclenumber) {\r\n  if (color[u] === 2) {\r\n    return;\r\n  }\r\n\r\n  // seen vertex, but was not\r\n  // completely visited -> cycle\r\n  // detected. backtrack based on\r\n  // parents to find the complete\r\n  // cycle.\r\n  if (color[u] === 1) {\r\n    cyclenumber++;\r\n    var cur = p;\r\n    mark[cur] = cyclenumber;\r\n\r\n    // backtrack the vertex which\r\n    // are in the current cycle\r\n    // thats found\r\n    while (cur !== u) {\r\n      cur = par[cur];\r\n      mark[cur] = cyclenumber;\r\n    }\r\n    return;\r\n  }\r\n  par[u] = p;\r\n\r\n  // partially visited.\r\n  color[u] = 1;\r\n\r\n  // simple dfs on graph\r\n  for (var v of graph[u]) {\r\n    // if it has not been\r\n    // visited previously\r\n    if (v === par[u]) {\r\n      continue;\r\n    }\r\n    dfs_cycle(v, u, color, mark, par);\r\n  }\r\n\r\n  // completely visited.\r\n  color[u] = 2;\r\n}\r\n\r\nexport const fCyc = (adj) => {\r\n  let N = adj.length;\r\n  var cycles = Array.from(Array(N), () => Array());\r\n  var color = Array(N).fill(0);\r\n  var par = Array(N).fill(0);\r\n  // mark with unique numbers\r\n  var mark = Array(N).fill(0);\r\n  var cyclenumber = 0;\r\n  var edges = 13;\r\n  console.log(adj);\r\n  dfs_cycle(0, -1, color, mark, par, adj, cyclenumber);\r\n  for (var i = 1; i <= edges; i++) {\r\n    if (mark[i] !== 0) cycles[mark[i]].push(i);\r\n  }\r\n\r\n  return cycles;\r\n};\r\n","import { UNDIRECTED_EDGE } from \"../data/config\";\r\nimport { getNodeNumber } from \"./misc\";\r\n\r\nexport const getEdgeAngle = ({ x1, x2, y1, y2, source, target }) => {\r\n  const nn1 = getNodeNumber(source);\r\n  const nn2 = getNodeNumber(target);\r\n\r\n  let angle = (Math.atan((y1 - y2) / (x2 - x1)) * 180) / Math.PI;\r\n  if (x2 - x1 < 0) angle += 180;\r\n  else if (y1 - y2 < 0) angle += 360;\r\n  return {\r\n    title: `${nn1}-${nn2}`,\r\n    value: angle,\r\n  };\r\n};\r\n\r\nexport const getEdgeFromNN = (canvas, n1, n2) => {\r\n  const op1 = `${n1}-${n2}`,\r\n    op2 = `${n2}-${n1}`;\r\n  const edgeId = canvas.edgeNodeMap[op1] || canvas.edgeNodeMap[op2];\r\n\r\n  return canvas\r\n    .getObjects(UNDIRECTED_EDGE)\r\n    .find(({ id }) => id === `edge-${edgeId}`);\r\n};\r\n\r\nexport const getEdgeLength = ({ x1, x2, y1, y2 }) => {\r\n  return Math.sqrt((x1 - x2) ** 2 + (y1 - y2) ** 2);\r\n};\r\n","class Stack {\r\n  constructor() {\r\n    this.items = [];\r\n  }\r\n\r\n  push(el) {\r\n    this.items.push(el);\r\n  }\r\n\r\n  pop() {\r\n    if (this.items.length === 0) {\r\n      console.error(\"ERROR: stack empty\");\r\n      return null;\r\n    }\r\n    return this.items.pop();\r\n  }\r\n\r\n  top() {\r\n    if (this.items.length === 0) {\r\n      console.error(\"ERROR: stack empty\");\r\n      return null;\r\n    }\r\n    return this.items.slice(-1)[0];\r\n  }\r\n\r\n  isEmpty() {\r\n    return this.items.length === 0;\r\n  }\r\n\r\n  print() {\r\n    let str = \"\";\r\n    this.items.forEach((el) => (str += el + \" \"));\r\n    return str.trim();\r\n  }\r\n\r\n  size() {\r\n    return this.items.length;\r\n  }\r\n}\r\n\r\nexport default Stack;\r\n","import Stack from \"../modules/stack\";\r\n\r\nexport const checkGraphInput = (type = \"ADJMAT\", input = \"\") => {\r\n  let output = { message: \"all good\", status: \"true\" };\r\n  if (type === \"ADJMAT\") {\r\n    const mat = input\r\n      .replace(/\\n+/g, \"\\n\")\r\n      .trim()\r\n      .split(\"\\n\")\r\n      .map((arr) => arr.replace(/\\s+/g, \" \").trim().split(\" \"));\r\n\r\n    mat.every((row, i) => {\r\n      if (row.length !== mat.length) {\r\n        output = {\r\n          message: `Please input a square matrix. Row ${i + 1} of invalid size`,\r\n          status: false,\r\n        };\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n    if (!output.status) return output;\r\n    else\r\n      output = {\r\n        status: true,\r\n        message: mat,\r\n      };\r\n  }\r\n  return output;\r\n};\r\n\r\nexport const getAdjacencyMatrix = (canvas) => {\r\n  const n = canvas.getObjects(\"node\").length;\r\n  let g = [...Array(n)].map((e) => Array(n).fill(0));\r\n  Object.entries(canvas.edgeNodeMap).forEach(([key]) => {\r\n    const ids = key.split(\"-\");\r\n    g[ids[0] - 1][ids[1] - 1] = g[ids[1] - 1][ids[0] - 1] = 1;\r\n  });\r\n  return g;\r\n};\r\n\r\nconst fundamentalCircuit = (pred = [], start, end) => {\r\n  if (typeof start !== \"number\" || typeof end !== \"number\") {\r\n    console.error(\"Expected a number value for current node.\");\r\n    return [];\r\n  }\r\n  let ans = [];\r\n  let i = start;\r\n\r\n  while (i !== pred[end]) {\r\n    ans.push(i + 1);\r\n    i = pred[i];\r\n  }\r\n  ans.push(pred[end] + 1);\r\n  ans.push(end + 1);\r\n\r\n  return ans;\r\n};\r\n\r\n//Implementation of Paton's algorithm\r\nexport const fundamentalMatrix = (canvas) => {\r\n  let X = getAdjacencyMatrix(canvas);\r\n  let TW = new Stack();\r\n  let level = new Array(X.length).fill(-1);\r\n  let pred = new Array(X.length);\r\n  let ans = [];\r\n\r\n  level.forEach((value, root) => {\r\n    if (value === -1) {\r\n      TW.push(root);\r\n      let T = [root];\r\n      level[root] = pred[root] = 0;\r\n      while (!TW.isEmpty()) {\r\n        const z = TW.pop();\r\n        X[z].forEach((edge, p) => {\r\n          if (Boolean(edge)) {\r\n            if (T.indexOf(p) === -1) {\r\n              pred[p] = z;\r\n              level[p] = level[z] + 1;\r\n              T.push(p);\r\n              TW.push(p);\r\n            } else ans.push(fundamentalCircuit(pred, z, p));\r\n            X[z][p] = X[p][z] = 0;\r\n          }\r\n        });\r\n      }\r\n    }\r\n  });\r\n\r\n  return ans;\r\n};\r\n\r\n//Implementation of Gibbs algorithm\r\nexport const getCycles = (canvas) => {\r\n  const fm = fundamentalMatrix(canvas);\r\n  let cycles = [];\r\n  let B = [];\r\n  const EDGE = canvas.edgeCount;\r\n\r\n  if (fm.length === 1) {\r\n    return { fm, cycles: fm };\r\n  }\r\n  // console.log(fCyc(getAdjacencyMatrix(canvas)));\r\n  for (let i = 0; i < fm.length; i++) {\r\n    B.push(new Array(canvas.edgeCount + 2).join(\"0\"));\r\n    for (let j = 0; j < fm[i].length; j++) {\r\n      const idx =\r\n        j === 0\r\n          ? canvas.edgeNodeMap[`${fm[i][j]}${fm[i][fm[i].length - 1]}`] ||\r\n            canvas.edgeNodeMap[`${fm[i][fm[i].length - 1]}${fm[i][j]}`]\r\n          : canvas.edgeNodeMap[`${fm[i][j]}${fm[i][j - 1]}`] ||\r\n            canvas.edgeNodeMap[`${fm[i][j - 1]}${fm[i][j]}`];\r\n      if (idx) B[i] = B[i].replaceAt(idx, \"1\");\r\n    }\r\n  }\r\n  console.log(B);\r\n\r\n  let BASIC = fm.length;\r\n  let Q = new Array(2 ** BASIC);\r\n  let qflag = new Array(2 ** BASIC).fill(0);\r\n  Q[1] = B[0];\r\n  for (let i = 2; i <= BASIC; i++) {\r\n    let lower = 2 ** (i - 1);\r\n    let upper = 2 ** i - 1;\r\n\r\n    for (let qidx = 1; qidx < lower; qidx++) {\r\n      if (B[i - 1].bitAND(Q[qidx]) !== \"0\") {\r\n        Q[upper] = B[i - 1].bitXOR(Q[qidx]);\r\n        upper--;\r\n      } else {\r\n        Q[lower] = B[i - 1].bitXOR(Q[qidx]);\r\n        qflag[lower] = 1;\r\n        lower++;\r\n      }\r\n      Q[lower] = B[i - 1];\r\n    }\r\n    for (let j = lower; j < 2 ** i - 1; j++) {\r\n      for (let k = j + 1; k < 2 ** i; k++) {\r\n        if (qflag[j]) break;\r\n        if (qflag[k]) continue;\r\n        if (parseInt(Q[j].bitOR(Q[k]), 2) === parseInt(Q[j], 2)) qflag[k] = 1;\r\n        else if (parseInt(Q[j].bitOR(Q[k]), 2) === parseInt(Q[k], 2))\r\n          qflag[j] = 1;\r\n      }\r\n    }\r\n    console.log(`itr${i - 1}`, Q, qflag);\r\n  }\r\n  let n_cyc = 0;\r\n  for (let i = 1; i < 2 ** BASIC; i++) {\r\n    if (qflag[i]) continue;\r\n    Q[n_cyc + 1] = Q[i];\r\n    n_cyc++;\r\n  }\r\n\r\n  console.log(qflag, n_cyc, Q);\r\n\r\n  // let cyc = fm.length;\r\n  // let C = [B[0]];\r\n  // let Q = C,\r\n  //   D = (R = \"0\");\r\n\r\n  // for (let i = 1; i < cyc; i++) {\r\n  //   Q.forEach((T) => {\r\n  //     if (T.bitAND(B[i]) === \"0\") {\r\n  //       D = D.bitOR(T.bitXOR(B[i]));\r\n  //     } else {\r\n  //       R = R.bitOR(T.bitXOR(B[i]));\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // console.log(fm, B);\r\n\r\n  return {\r\n    fm,\r\n    cycles,\r\n  };\r\n};\r\n","import { DIRECTED_EDGE } from \"../../../../../data/config\";\r\nimport { gray } from \"../../../../../elements/colorSchema\";\r\nimport { getRandomNumberInterval } from \"../../../../../helpers/misc\";\r\nimport fabric from \"../../../../../modules/fabric\";\r\nimport { createEdge, moveEdge } from \"./edge\";\r\n\r\nexport const createNode = (canvas, { id, title }) => {\r\n  const canvasBoundaries = canvas.vptCoords.br;\r\n  const radius = 30;\r\n\r\n  const circle = new fabric.Circle({\r\n    radius: radius,\r\n    fill: gray,\r\n    originX: \"center\",\r\n    originY: \"center\",\r\n  });\r\n  const text = new fabric.Text(title.toString(), {\r\n    fontSize: 20,\r\n    originX: \"center\",\r\n    originY: \"center\",\r\n  });\r\n\r\n  const grp = new fabric.Group([circle, text], {\r\n    left: getRandomNumberInterval(radius, canvasBoundaries.x - radius),\r\n    top: getRandomNumberInterval(radius, canvasBoundaries.y - radius),\r\n    type: \"node\",\r\n    id,\r\n    text: title,\r\n    edges: [], //Each edge -> {origin: \"\", target: \"\", type: \"\", line: lineData}\r\n    incomingEdges: [],\r\n    isGrounded: false,\r\n    controls: false,\r\n  });\r\n\r\n  grp\r\n    .on(\"selected\", function (e) {\r\n      canvas.fire(\"custom:update\", e.target);\r\n      canvas.fire(\"node:selection\", e.target);\r\n    })\r\n    .on(\"deselected\", function (e) {\r\n      canvas.fire(\"node:deselection\", e.target);\r\n      canvas.fire(\"custom:deselection\", e.target);\r\n    })\r\n    .on(\"scaling\", function (e) {\r\n      canvas.fire(\"custom:update\", e.target);\r\n    })\r\n    .on(\"moving\", function (e) {\r\n      canvas.fire(\"node:moving\", e.transform.target);\r\n    });\r\n\r\n  return grp;\r\n};\r\n\r\n//actions - PROPERTY_CHANGE, MOVE, SELECTION, ADD_EDGE\r\nexport const updateNodeData = (action, { canvas, ...data }) => {\r\n  const node = data?.node || canvas.getActiveObject();\r\n\r\n  switch (action) {\r\n    case \"PROPERTY_CHANGE\":\r\n      node.item(1).set(data);\r\n      node.set(data);\r\n      return;\r\n    case \"MOVE\":\r\n      moveEdge(canvas, node);\r\n      canvas.renderAll();\r\n      return;\r\n    case \"ADD_EDGE\":\r\n      const edge = createEdge(canvas, data);\r\n      canvas.getObjects(\"node\").forEach(({ id, ...node }) => {\r\n        if (id === data.target || id === data.source) {\r\n          node.edges.push(edge.id);\r\n        }\r\n      });\r\n      canvas.add(edge).sendToBack(edge).renderAll();\r\n      canvas.fire(\"custom:update\", node);\r\n      return;\r\n    case \"SELECTION\":\r\n      node.item(0).set({ fill: data.selected ? \"red\" : gray });\r\n      canvas.renderAll();\r\n      return;\r\n    default:\r\n      console.log(\"tf u doing\");\r\n      return;\r\n  }\r\n};\r\n","import { DIRECTED_EDGE, UNDIRECTED_EDGE } from \"../../../../../data/config\";\r\nimport { getEdgeAngle } from \"../../../../../helpers/edge\";\r\nimport { getAdjacencyMatrix } from \"../../../../../helpers/graph\";\r\nimport fabric from \"../../../../../modules/fabric\";\r\n\r\nexport const createEdge = (canvas, { target, source, type, title, id }) => {\r\n  const p = canvas.getObjects().find(({ id }) => id === source);\r\n  const c = canvas.getObjects().find(({ id }) => id === target);\r\n  let edge = null;\r\n  const edgeOptions = {\r\n    id,\r\n    fill: \"red\",\r\n    stroke: \"red\",\r\n    strokeWidth: 5,\r\n    selectable: false,\r\n    type,\r\n    eangle: {},\r\n    evented: false,\r\n    destCurve: { a: c.width, b: c.height },\r\n    text: title,\r\n    target,\r\n    source,\r\n  };\r\n\r\n  if (type === DIRECTED_EDGE) {\r\n    edge = new fabric.LineArrow([p.left, p.top, c.left, c.top], edgeOptions);\r\n  } else {\r\n    edge = new fabric.Line([p.left, p.top, c.left, c.top], edgeOptions);\r\n  }\r\n\r\n  return edge;\r\n};\r\n\r\nexport const moveEdge = (canvas, { id, left, top, edges }) => {\r\n  edges.forEach((edgeId) => {\r\n    const edge = canvas.getObjects().find(({ id }) => id === edgeId);\r\n    if (edge.source === id) edge.set({ x1: left, y1: top });\r\n    else edge.set({ x2: left, y2: top });\r\n  });\r\n};\r\n\r\nexport const setEdgeAngles = (canvas) => {\r\n  canvas.getObjects(UNDIRECTED_EDGE).forEach((edge) => {\r\n    edge.set({\r\n      eangle: getEdgeAngle(edge),\r\n    });\r\n  });\r\n};\r\n","import { useCallback, useState } from \"react\";\r\nimport { createContainer } from \"unstated-next\";\r\nimport fabric from \"../modules/fabric\";\r\nimport { defaultNode, DIRECTED_EDGE, UNDIRECTED_EDGE } from \"../data/config\";\r\nimport {\r\n  createNode,\r\n  updateNodeData,\r\n} from \"../components/content/components/canvas/components/node\";\r\nimport { fundamentalMatrix } from \"../helpers/graph\";\r\nimport { getNodeNumber } from \"../helpers/misc\";\r\n\r\nconst CanvasStore = createContainer(() => {\r\n  const [canvas, setCanvas] = useState(null);\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  const initCanvas = useCallback((node, canvasId, canvasOptions) => {\r\n    if (!!node) {\r\n      var canvas = new fabric.Canvas(canvasId, canvasOptions);\r\n\r\n      canvas.on(\"custom:update\", (option) =>\r\n        setSelected((prevState) =>\r\n          prevState ? { ...prevState, ...option } : option\r\n        )\r\n      );\r\n      canvas.on(\"node:selection\", (option) =>\r\n        updateNodeData(\"SELECTION\", { canvas, selected: true, node: option })\r\n      );\r\n      canvas.on(\"custom:deselection\", () => setSelected(null));\r\n      canvas.on(\"node:deselection\", (option) =>\r\n        updateNodeData(\"SELECTION\", { canvas, selected: false, node: option })\r\n      );\r\n      canvas.on(\"node:moving\", (option) =>\r\n        updateNodeData(\"MOVE\", { canvas, node: option })\r\n      );\r\n      setCanvas(canvas);\r\n      console.log(canvas);\r\n    }\r\n  }, []);\r\n\r\n  const resetCanvas = useCallback(() => {\r\n    canvas.dispose();\r\n    // setCanvas(null);\r\n    // // eslint-disable-next-line\r\n  }, [canvas]);\r\n\r\n  const addNode = useCallback(\r\n    (options = defaultNode) => {\r\n      if (canvas) {\r\n        const newNode = createNode(canvas, {\r\n          id: `node-${canvas.nodeCount + 1}`,\r\n          title: options?.title || canvas.nodeCount + 1,\r\n        });\r\n\r\n        canvas.add(newNode).setActiveObject(newNode);\r\n        canvas.set({ nodeCount: canvas.nodeCount + 1 });\r\n        console.log(canvas);\r\n      }\r\n      return;\r\n    },\r\n    [canvas]\r\n  );\r\n\r\n  const updateNode = useCallback(\r\n    (action, data) => {\r\n      if (canvas) {\r\n        updateNodeData(action, { canvas, ...data });\r\n        canvas.renderAll();\r\n      }\r\n    },\r\n    [canvas]\r\n  );\r\n\r\n  const addEdge = useCallback(\r\n    (src, dest, type) => {\r\n      updateNode(\"ADD_EDGE\", {\r\n        target: dest,\r\n        source: src,\r\n        type,\r\n        title: canvas.edgeCount + 1,\r\n        id: `edge-${canvas.edgeCount + 1}`,\r\n      });\r\n      canvas.set({\r\n        edgeNodeMap: {\r\n          ...canvas.edgeNodeMap,\r\n          [`${getNodeNumber(src)}-${getNodeNumber(dest)}`]:\r\n            canvas.edgeCount + 1,\r\n        },\r\n        edgeCount: canvas.edgeCount + 1,\r\n      });\r\n    },\r\n    [canvas, updateNode]\r\n  );\r\n\r\n  const addGraph = useCallback(\r\n    (type, graph = []) => {\r\n      if (type === \"ADJMAT\") {\r\n        const prevNodeCount = canvas.nodeCount;\r\n        let nodes = [];\r\n        [...Array(graph.length)].forEach((_, i) => {\r\n          const newNode = createNode(canvas, {\r\n            id: `node-${prevNodeCount + i + 1}`,\r\n            title: prevNodeCount + i + 1,\r\n          });\r\n\r\n          canvas.add(newNode);\r\n          nodes.push(newNode);\r\n        });\r\n\r\n        graph.forEach((r, i) => {\r\n          const curNode = nodes[i];\r\n          r.forEach((el, j) => {\r\n            if (el !== \"0\" && i !== j && !(graph[j][i] === el && j > i)) {\r\n              addEdge(\r\n                curNode.id,\r\n                nodes[j].id,\r\n                graph[j][i] === el ? UNDIRECTED_EDGE : DIRECTED_EDGE\r\n              );\r\n            }\r\n          });\r\n        });\r\n        setSelected(null);\r\n      } else {\r\n        console.log(\"Jld hi\");\r\n      }\r\n    },\r\n    [canvas, addEdge]\r\n  );\r\n\r\n  const getFundamentalMatrix = useCallback(() => {\r\n    return fundamentalMatrix(canvas);\r\n  }, [canvas]);\r\n\r\n  const generateEquations = useCallback(() => {\r\n    const groundNodes = canvas\r\n      .getObjects()\r\n      .filter(({ type, isGrounded }) => type === \"node\" && isGrounded);\r\n    if (groundNodes.length < 2) {\r\n      alert(\"Please ground atleast two nodes.\");\r\n      return;\r\n    }\r\n    setSelected({ type: \"equations\" });\r\n  }, [canvas]);\r\n\r\n  return {\r\n    canvas,\r\n    initCanvas,\r\n    resetCanvas,\r\n    isCanvasActive: !!canvas,\r\n    addNode,\r\n    selected,\r\n    updateNode,\r\n    setSelected,\r\n    addGraph,\r\n    getFundamentalMatrix,\r\n    generateEquations,\r\n    addEdge,\r\n  };\r\n});\r\n\r\nexport default CanvasStore;\r\n","import styled from \"styled-components\";\r\nimport { hFlex, vFlex } from \"../../../elements/helpers\";\r\n\r\nexport const ContentEl = styled.div`\r\n  ${hFlex}\r\n  width: 100%;\r\n  justify-content: flex-start;\r\n  height: 100%;\r\n`;\r\n\r\nexport const CanvasEl = styled.div`\r\n  width: 75%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const SidebarEl = styled.div`\r\n  ${vFlex}\r\n  width: 25%;\r\n  height: 100%;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nexport const GraphOptionsEl = styled.div``;\r\n\r\nexport const GraphPropertiesEl = styled.div``;\r\n\r\nexport const EquationsEl = styled.div``;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { lightGray } from \"../../../../elements/colorSchema\";\r\nimport CanvasStore from \"../../../../stores/canvasStore\";\r\nimport { CanvasEl } from \"../../elements\";\r\n\r\nfunction Canvas() {\r\n  const canvasContainer = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  const { initCanvas } = CanvasStore.useContainer();\r\n\r\n  useEffect(() => {\r\n    if (!canvasRef.current) return;\r\n    initCanvas(canvasRef, \"main-canvas\", {\r\n      width: canvasContainer.current.clientWidth,\r\n      height: canvasContainer.current.clientHeight,\r\n      backgroundColor: lightGray,\r\n      preserveObjectStacking: true,\r\n      nodeCount: 0,\r\n      edgeCount: 0,\r\n      edgeNodeMap: {},\r\n    });\r\n  }, [initCanvas]);\r\n\r\n  return (\r\n    <CanvasEl ref={canvasContainer}>\r\n      <canvas id=\"main-canvas\" ref={canvasRef} />\r\n    </CanvasEl>\r\n  );\r\n}\r\n\r\nexport default Canvas;\r\n","import { setEdgeAngles } from \"../components/content/components/canvas/components/edge\";\r\nimport { getEdgeFromNN, getEdgeLength } from \"../helpers/edge\";\r\nimport { fundamentalMatrix } from \"../helpers/graph\";\r\nimport { getNodeFromNN } from \"../helpers/misc\";\r\n\r\n//eq identifier, then solver. TODO\r\nexport function EquationSolver(canvas) {\r\n  setEdgeAngles(canvas);\r\n\r\n  const fm = fundamentalMatrix(canvas);\r\n  let eq = [];\r\n  console.log(fm);\r\n\r\n  fm.forEach((r) => {\r\n    const N = r.length;\r\n    let si = -1,\r\n      e = [];\r\n    for (let i = 0; i < N && si === -1; i++) {\r\n      if (getNodeFromNN(canvas, r[i]).isGrounded) si = i;\r\n    }\r\n    if (si === -1) {\r\n      console.error(\"No grounded nodes\");\r\n      return;\r\n    }\r\n    for (let i = si, j = 0; j < N; j++) {\r\n      let o = r[i],\r\n        t = r[(i + 1) % N],\r\n        sign = \"+\";\r\n      if (i === (si + N - 1) % N) {\r\n        [o, t] = [t, o];\r\n        sign = \"-\";\r\n      }\r\n      const edge = getEdgeFromNN(canvas, o, t);\r\n      if (edge.eangle.title !== `${o}-${t}`) {\r\n        edge.set({\r\n          eangle: {\r\n            title: `${o}-${t}`,\r\n            value: (edge.eangle.value + 180) % 360,\r\n          },\r\n        });\r\n      }\r\n      e.push({\r\n        title: edge.eangle.title,\r\n        angle: edge.eangle.value,\r\n        length: getEdgeLength(edge),\r\n        sign,\r\n      });\r\n      i = (i + 1) % N;\r\n    }\r\n    eq.push(e);\r\n  });\r\n  return eq;\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n// import { displayEqObj } from \"../../../../../helpers/equations\";\r\nimport { EquationSolver } from \"../../../../../modules/equationSolver\";\r\nimport CanvasStore from \"../../../../../stores/canvasStore\";\r\nimport { EquationsEl } from \"../../../elements\";\r\n\r\nfunction Equations() {\r\n  const [loading, setLoading] = useState(true);\r\n  const equations = useRef(null);\r\n  const { canvas } = CanvasStore.useContainer();\r\n\r\n  useEffect(() => {\r\n    equations.current = EquationSolver(canvas);\r\n    console.log(equations.current);\r\n    setLoading(false);\r\n  }, [setLoading]);\r\n\r\n  return (\r\n    <EquationsEl>\r\n      {loading ? (\r\n        \"loading ...\"\r\n      ) : (\r\n        <>\r\n          {equations.current.map((eq, ind) => {\r\n            let e = \"\";\r\n            eq.forEach(({ title, sign }, i) => {\r\n              if (i !== 0 || sign === \"-\") e = e.concat(`${sign} `);\r\n              e = e.concat(`l_${title}e^(itheta_${title}) `);\r\n            });\r\n            e = e.concat(`= 0`);\r\n            console.log(e);\r\n            return <li key={`eq-${ind}`}>{e}</li>;\r\n          })}\r\n        </>\r\n      )}\r\n    </EquationsEl>\r\n  );\r\n}\r\n\r\nexport default Equations;\r\n","import React, { useState } from \"react\";\r\nimport { checkGraphInput } from \"../../../../../helpers/graph\";\r\nimport CanvasStore from \"../../../../../stores/canvasStore\";\r\nimport { GraphOptionsEl } from \"../../../elements\";\r\n\r\nfunction GraphOptions() {\r\n  const [input, setInput] = useState(\"\");\r\n  const [inputType, setInputType] = useState(\"ADJMAT\");\r\n  const { addGraph } = CanvasStore.useContainer();\r\n\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const setGraphInputType = (e) => {\r\n    //TO DO: Change current input to diff form\r\n    setInput(\"\");\r\n    setInputType(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const inputCheck = checkGraphInput(inputType, input);\r\n    if (!inputCheck.status) alert(inputCheck.message);\r\n    else {\r\n      addGraph(inputType, inputCheck.message);\r\n      setInput(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GraphOptionsEl>\r\n      <h3>Add a graph</h3>\r\n      <form>\r\n        <p>Insert Adjacency Matrix</p>\r\n        {/* <div></div> */}\r\n        {/* <div className=\"graph-input-select\" onChange={setGraphInputType}>\r\n          <input\r\n            type=\"radio\"\r\n            defaultChecked\r\n            id=\"graph-option-adj-mat\"\r\n            name=\"graph-input-type\"\r\n            value=\"ADJMAT\"\r\n          />\r\n          <label htmlFor=\"graph-option-adj-mat\">Adjacency Matrix</label>\r\n          <input\r\n            type=\"radio\"\r\n            id=\"graph-option-edges\"\r\n            name=\"graph-input-type\"\r\n            value=\"EDGE\"\r\n          />\r\n          <label htmlFor=\"graph-option-edges\">Edges</label>\r\n        </div> */}\r\n        <textarea\r\n          rows=\"4\"\r\n          name=\"graph-input\"\r\n          value={input}\r\n          onChange={handleChange}\r\n        />\r\n        <br />\r\n        <button type=\"submit\" onClick={handleSubmit}>\r\n          Add\r\n        </button>\r\n      </form>\r\n    </GraphOptionsEl>\r\n  );\r\n}\r\n\r\nexport default GraphOptions;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport CanvasStore from \"../../../../../stores/canvasStore\";\r\nimport { GraphPropertiesEl } from \"../../../elements\";\r\n\r\nfunction GraphProperties() {\r\n  const { getFundamentalMatrix } = CanvasStore.useContainer();\r\n  const [loading, setLoading] = useState(true);\r\n  const fundamentalMatrix = useRef(null);\r\n\r\n  useEffect(() => {\r\n    fundamentalMatrix.current = getFundamentalMatrix();\r\n    setLoading(false);\r\n  }, [setLoading, getFundamentalMatrix]);\r\n\r\n  return (\r\n    <GraphPropertiesEl>\r\n      {loading ? (\r\n        \"loading...\"\r\n      ) : (\r\n        <>\r\n          <h3>Fundamental Circuits:</h3>\r\n          <ul>\r\n            {fundamentalMatrix?.current?.length &&\r\n              fundamentalMatrix.current.map((row, i) => (\r\n                <li key={`fundamental-${i}`}>{row.map((el) => el + \" \")}</li>\r\n              ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </GraphPropertiesEl>\r\n  );\r\n}\r\n\r\nexport default GraphProperties;\r\n","import React from \"react\";\r\nimport { UNDIRECTED_EDGE } from \"../../../../../../../data/config\";\r\n\r\nfunction Edges({\r\n  edgeNodeMap,\r\n  node: { id: nodeId, edges },\r\n  otherNodes,\r\n  addEdge,\r\n}) {\r\n  return (\r\n    <>\r\n      <h5>Edges:</h5>\r\n      {edges.length > 0 ? (\r\n        <ul>\r\n          {Object.entries(edgeNodeMap).map(([key]) => {\r\n            const ids = key.split(\"-\").map((id) => `node-${id}`);\r\n\r\n            if (ids[0] === nodeId)\r\n              return <li key={`${ids[1]}`}>Edge with {ids[1]}</li>;\r\n            else if (ids[1] === nodeId)\r\n              return <li key={`${ids[0]}`}>Edge with {ids[0]}</li>;\r\n            else return \"\";\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        <p>No edges for this node.</p>\r\n      )}\r\n      {otherNodes.length > 0 ? (\r\n        <form\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            addEdge(\r\n              nodeId,\r\n              e.target.getElementsByTagName(\"select\")[0].value,\r\n              UNDIRECTED_EDGE\r\n            );\r\n          }}\r\n        >\r\n          <label htmlFor=\"edge\">Add edge: </label>\r\n          <select name=\"edge\">\r\n            {otherNodes.map((node) => (\r\n              <option key={node} value={node}>\r\n                {node}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <button type=\"submit\">Add Edge</button>\r\n        </form>\r\n      ) : (\r\n        <p>No node available for an edge</p>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Edges;\r\n","import React from \"react\";\r\n\r\nfunction NodeInfo({ node: { id, text: label, isGrounded }, handleChange }) {\r\n  return (\r\n    <>\r\n      <p>Id: {id}</p>\r\n      <label htmlFor=\"text\">Name:</label>\r\n      <input\r\n        value={label}\r\n        name=\"text\"\r\n        data-action=\"PROPERTY_CHANGE\"\r\n        onChange={handleChange}\r\n      />\r\n      <label htmlFor=\"isGrounded\">Grounded:</label>\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={isGrounded}\r\n        name=\"isGrounded\"\r\n        data-action=\"PROPERTY_CHANGE\"\r\n        onChange={handleChange}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NodeInfo;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { UNDIRECTED_EDGE } from \"../../../../../../data/config\";\r\nimport CanvasStore from \"../../../../../../stores/canvasStore\";\r\nimport Edges from \"./components/edges\";\r\nimport NodeInfo from \"./components/info\";\r\n\r\nfunction NodeOptions() {\r\n  const { canvas, updateNode, selected, addEdge } = CanvasStore.useContainer();\r\n  const [nodeState, setNodeState] = useState(selected);\r\n  const [otherNodes, setOtherNodes] = useState([]);\r\n\r\n  const handleChange = (e) => {\r\n    let update;\r\n    if (e.target.type === \"checkbox\") {\r\n      update = { [e.target.name]: e.target.checked };\r\n    } else {\r\n      update = { [e.target.name]: e.target.value };\r\n    }\r\n    setNodeState((prev) => ({ ...prev, ...update }));\r\n\r\n    updateNode(e.target.getAttribute(\"data-action\"), update);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setNodeState((prev) => ({ ...prev, ...selected }));\r\n  }, [selected]);\r\n\r\n  //Create list of nodes not connected to current\r\n  useEffect(() => {\r\n    setOtherNodes(\r\n      canvas\r\n        .getObjects(\"node\")\r\n        .filter(\r\n          ({ id }) =>\r\n            id !== selected.id &&\r\n            Object.entries(canvas.edgeNodeMap)\r\n              .map(([key]) => {\r\n                const nodeIds = key.split(\"-\").map((nn) => `node-${nn}`);\r\n                return !(\r\n                  (nodeIds[0] === selected.id && nodeIds[1] === id) ||\r\n                  (nodeIds[1] === selected.id && nodeIds[0] === id)\r\n                );\r\n              })\r\n              .reduce((prev, curr) => prev & curr, true)\r\n        )\r\n        .map(({ id }) => id)\r\n    );\r\n  }, [setOtherNodes, selected, canvas]);\r\n\r\n  return (\r\n    <div className=\"node-options\">\r\n      <NodeInfo node={nodeState} handleChange={handleChange} />\r\n      <Edges\r\n        node={selected}\r\n        edgeNodeMap={canvas.edgeNodeMap}\r\n        otherNodes={otherNodes}\r\n        addEdge={addEdge}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NodeOptions;\r\n","import React from \"react\";\r\nimport CanvasStore from \"../../../../stores/canvasStore\";\r\nimport { SidebarEl } from \"../../elements\";\r\nimport Equations from \"./components/equations\";\r\nimport GraphOptions from \"./components/graphOptions\";\r\nimport GraphProperties from \"./components/graphProperties\";\r\nimport Node from \"./components/node\";\r\n\r\nfunction Sidebar() {\r\n  const { selected } = CanvasStore.useContainer();\r\n\r\n  return (\r\n    <SidebarEl>\r\n      {selected\r\n        ? (() => {\r\n            switch (selected.type) {\r\n              case \"node\":\r\n                return <Node />;\r\n              case \"graph\":\r\n                return <GraphOptions />;\r\n              case \"graph-properties\":\r\n                return <GraphProperties />;\r\n              case \"equations\":\r\n                return <Equations />;\r\n              default:\r\n                return <div>Error</div>;\r\n            }\r\n          })()\r\n        : \"Select an object to view its properties\"}\r\n    </SidebarEl>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport Canvas from \"./components/canvas\";\r\nimport Sidebar from \"./components/sidebar\";\r\nimport { ContentEl } from \"./elements\";\r\n\r\nfunction Content() {\r\n  return (\r\n    <ContentEl>\r\n      <Sidebar />\r\n      <Canvas />\r\n    </ContentEl>\r\n  );\r\n}\r\n\r\nexport default Content;\r\n","import styled from \"styled-components\";\r\nimport { grayBorder } from \"../../../elements/colorSchema\";\r\nimport { hFlex } from \"../../../elements/helpers\";\r\n\r\nexport const NavbarEl = styled.div`\r\n  ${hFlex}\r\n  box-sizing: border-box;\r\n  padding: 1em;\r\n  width: 100%;\r\n  justify-content: flex-start;\r\n  border-bottom: 1px solid ${grayBorder};\r\n`;\r\n","import React from \"react\";\r\nimport CanvasStore from \"../../stores/canvasStore\";\r\nimport { NavbarEl } from \"./elements/index\";\r\n\r\nfunction Navbar() {\r\n  const { isCanvasActive, addNode, setSelected, generateEquations } =\r\n    CanvasStore.useContainer();\r\n  return (\r\n    <NavbarEl>\r\n      <button\r\n        onClick={() =>\r\n          isCanvasActive ? addNode() : console.log(\"Canvas not loaded\")\r\n        }\r\n        className=\"navbar-btn\"\r\n        disabled={!isCanvasActive}\r\n      >\r\n        Add Node\r\n      </button>\r\n      <button\r\n        onClick={() =>\r\n          isCanvasActive\r\n            ? setSelected({ type: \"graph\" })\r\n            : console.error(\"Canvas not loaded\")\r\n        }\r\n        className=\"navbar-btn\"\r\n        disabled={!isCanvasActive}\r\n      >\r\n        Add Graph\r\n      </button>\r\n      <button\r\n        onClick={() => setSelected({ type: \"graph-properties\" })}\r\n        className=\"navbar-btn\"\r\n      >\r\n        View Cycles\r\n      </button>\r\n      <button\r\n        onClick={() =>\r\n          isCanvasActive\r\n            ? generateEquations()\r\n            : console.error(\"Canvas not loaded\")\r\n        }\r\n        className=\"navbar-btn\"\r\n        disabled={!isCanvasActive}\r\n      >\r\n        Generate equations\r\n      </button>\r\n    </NavbarEl>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { AppEl } from \"../elements/app\";\r\nimport CanvasStore from \"../stores/canvasStore\";\r\nimport { withStore } from \"../utils/withStore\";\r\nimport Content from \"./content\";\r\nimport Navbar from \"./navbar\";\r\n\r\nfunction App() {\r\n  return (\r\n    <AppEl>\r\n      <Navbar />\r\n      <Content />\r\n    </AppEl>\r\n  );\r\n}\r\n\r\nexport default withStore([CanvasStore])(App);\r\n","import React from \"react\";\r\n\r\nexport const withStore =\r\n  (stores = []) =>\r\n  (WrappedComponent) =>\r\n  (props) =>\r\n    stores.reduce(\r\n      (component, Store) => <Store.Provider>{component}</Store.Provider>,\r\n      <WrappedComponent {...props} />\r\n    );\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components\";\nimport reportWebVitals from \"./reportWebVitals\";\nrequire(\"./modules/string\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n/*\nTO DO:\nAdd prop-types (maybe)\n*/\n"],"sourceRoot":""}