{"version":3,"sources":["elements/helpers.js","elements/app.js","modules/fabric/index.js","data/config.js","elements/colorSchema.js","helpers/misc.js","components/content/components/canvas/components/edge.js","components/content/components/canvas/components/node.js","stores/canvasStore.js","components/content/elements/index.js","components/content/components/canvas/index.js","components/content/components/sidebar/components/graphOptions.js","helpers/graph.js","components/content/components/sidebar/components/nodeOptions.js","components/content/components/sidebar/index.js","components/content/index.js","components/navbar/elements/index.js","components/navbar/index.js","components/index.js","utils/withStore.js","reportWebVitals.js","index.js"],"names":["vFlex","css","hFlex","AppEl","styled","div","fabric","Object","prototype","originX","originY","LineArrow","util","createClass","Line","type","initialize","el","options","this","callSuper","toObject","object","extend","_render","ctx","width","height","visible","save","xDiff","x2","x1","yDiff","y2","y1","angle","Math","atan2","d","sqrt","strokeWidth","arrowx","destCurve","a","cos","arrowy","b","sin","arrow","translate","rotate","beginPath","moveTo","lineTo","closePath","fillStyle","stroke","fill","restore","fromObject","callback","async","defaultNode","radius","initCanvasState","nodeCount","gray","getRandomNumberInterval","min","max","floor","random","createEdge","canvas","childId","edge","p","node","c","getObjects","find","id","left","top","selectable","evented","moveEdge","edges","forEach","line","set","incomingEdges","createNode","title","canvasBoundaries","vptCoords","br","circle","Circle","text","Text","toString","fontSize","grp","Group","x","y","controls","on","e","fire","target","transform","updateNodeData","data","getActiveObject","keys","item","renderAll","push","nodeId","node2","add","sendToBack","selected","console","log","CanvasStore","createContainer","useState","setCanvas","setSelected","canvasState","setCanvasState","initCanvas","useCallback","canvasId","canvasOptions","Canvas","option","prevState","move","resetCanvas","dispose","addNode","newNode","setActiveObject","updateNode","addEdge","parent","addGraph","graph","prevNodeCount","length","nodes","Array","_","i","r","curNode","j","isCanvasActive","ContentEl","CanvasEl","SidebarEl","GraphOptionsEl","canvasContainer","useRef","canvasRef","useContainer","useEffect","current","clientWidth","clientHeight","backgroundColor","preserveObjectStacking","ref","GraphOptions","input","setInput","inputType","setInputType","className","onChange","value","defaultChecked","name","htmlFor","rows","onClick","preventDefault","inputCheck","output","message","status","mat","replace","trim","split","map","arr","every","row","checkGraphInput","alert","NodeOptions","nodeState","setNodeState","otherNodes","setOtherNodes","prev","filter","update","onSubmit","getElementsByTagName","Sidebar","Content","NavbarEl","Navbar","disabled","withStore","stores","WrappedComponent","props","reduce","component","Store","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8c6fa9f.chunk.js","sourcesContent":["import { css } from \"styled-components\";\r\n\r\nexport const square = (size) => css`\r\n  height: ${size};\r\n  width: ${size};\r\n  min-height: ${size};\r\n  min-width: ${size};\r\n`;\r\n\r\nexport const vFlex = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const hFlex = css`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const center = css`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nexport const vCenter = css`\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translate(0%, -50%);\r\n`;\r\n\r\nexport const hCenter = css`\r\n  position: absolute;\r\n  left: 50%;\r\n  transform: translate(-50%, 0);\r\n`;\r\n\r\nexport const background = (image, fit = \"contain\") => css`\r\n  background: url(${image}) center center / ${fit} no-repeat;\r\n`;\r\n\r\nexport const overlay = css`\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n`;\r\n\r\nexport const singleLineText = css`\r\n  width: 100%;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nexport const horizontalSplit = (parts, spacing) => css`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: flex-start;\r\n\r\n  & > * {\r\n    width: ${(100 - spacing * (parts - 1) * 2) / parts}%;\r\n    margin: 0 ${spacing}%;\r\n\r\n    &:nth-child(${parts}n+1) {\r\n      margin-left: 0;\r\n    }\r\n\r\n    &:nth-child(${parts}n) {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { vFlex } from \"./helpers\";\r\n\r\nexport const AppEl = styled.div`\r\n  ${vFlex}\r\n  align-items: flex-start;\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n","import { fabric } from \"fabric\";\r\n\r\nfabric.Object.prototype.originX = fabric.Object.prototype.originY = \"center\";\r\n\r\nfabric.LineArrow = fabric.util.createClass(fabric.Line, {\r\n  type: \"lineArrow\",\r\n  initialize: function (el, options) {\r\n    options || (options = {});\r\n\r\n    this.callSuper(\"initialize\", el, options);\r\n  },\r\n  toObject: function () {\r\n    return fabric.util.object.extend(this.callSuper(\"toObject\"));\r\n  },\r\n  _render: function (ctx) {\r\n    this.callSuper(\"_render\", ctx);\r\n\r\n    if (this.width === 0 || this.height === 0 || !this.visible) return;\r\n\r\n    ctx.save();\r\n\r\n    var xDiff = this.x2 - this.x1;\r\n    var yDiff = this.y2 - this.y1;\r\n    var angle = Math.atan2(yDiff, xDiff);\r\n    var d = (Math.sqrt(3) / 2) * this.strokeWidth;\r\n    var arrowx = this.x2 + (this.destCurve.a / 2) * Math.cos(angle);\r\n    var arrowy = this.y2 + (this.destCurve.b / 2) * Math.sin(angle);\r\n    var arrow = Math.sqrt((arrowx - this.x2) ** 2 + (arrowy - this.y2) ** 2);\r\n\r\n    ctx.translate(xDiff / 2, yDiff / 2);\r\n    ctx.rotate(angle);\r\n    ctx.beginPath();\r\n    ctx.moveTo(d - arrow, 0);\r\n    ctx.lineTo(-3 * d - arrow, (5 / 2) * d);\r\n    ctx.lineTo(-3 * d - arrow, (-5 / 2) * d);\r\n    ctx.closePath();\r\n    ctx.fillStyle = this.stroke;\r\n    ctx.fill();\r\n\r\n    ctx.restore();\r\n  },\r\n});\r\n\r\nfabric.LineArrow.fromObject = function (object, callback) {\r\n  callback &&\r\n    callback(\r\n      new fabric.LineArrow([object.x1, object.y1, object.x2, object.y2], object)\r\n    );\r\n};\r\n\r\nfabric.LineArrow.async = true;\r\n\r\nexport default fabric;\r\n","export const defaultNode = {\r\n  radius: 20,\r\n};\r\n\r\nexport const initCanvasState = {\r\n  nodeCount: 0,\r\n};\r\n","export const lightGray = \"#F2F2F2\";\r\nexport const grayBorder = \"#BFBFBF\";\r\nexport const gray = \"#808080\";\r\n","export const getRandomNumberInterval = (min = 0, max = 1) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n","import fabric from \"../../../../../modules/fabric\";\r\n\r\nexport const createEdge = (canvas, { edge: childId, node }) => {\r\n  const p = node;\r\n  const c = canvas.getObjects().find(({ id }) => id === childId);\r\n\r\n  const edge = new fabric.LineArrow([p.left, p.top, c.left, c.top], {\r\n    fill: \"red\",\r\n    stroke: \"red\",\r\n    strokeWidth: 5,\r\n    selectable: false,\r\n    evented: false,\r\n    destCurve: { a: c.width, b: c.height },\r\n  });\r\n\r\n  return edge;\r\n};\r\n\r\nexport const moveEdge = (node) => {\r\n  node.edges.forEach(({ line }) => line.set({ x1: node.left, y1: node.top }));\r\n  node.incomingEdges.forEach(({ line }) =>\r\n    line.set({ x2: node.left, y2: node.top })\r\n  );\r\n};\r\n","import { gray } from \"../../../../../elements/colorSchema\";\r\nimport { getRandomNumberInterval } from \"../../../../../helpers/misc\";\r\nimport fabric from \"../../../../../modules/fabric\";\r\nimport { createEdge, moveEdge } from \"./edge\";\r\n\r\nexport const createNode = (canvas, { id, title }) => {\r\n  const canvasBoundaries = canvas.vptCoords.br;\r\n  const radius = 30;\r\n\r\n  const circle = new fabric.Circle({\r\n    radius: radius,\r\n    fill: gray,\r\n    originX: \"center\",\r\n    originY: \"center\",\r\n  });\r\n  const text = new fabric.Text(title.toString(), {\r\n    fontSize: 20,\r\n    originX: \"center\",\r\n    originY: \"center\",\r\n  });\r\n\r\n  const grp = new fabric.Group([circle, text], {\r\n    left: getRandomNumberInterval(radius, canvasBoundaries.x - radius),\r\n    top: getRandomNumberInterval(radius, canvasBoundaries.y - radius),\r\n    type: \"node\",\r\n    id,\r\n    text: title,\r\n    edges: [], //Each edge -> {nodeId: \"\", line: lineData}\r\n    incomingEdges: [],\r\n    controls: false,\r\n  });\r\n\r\n  grp\r\n    .on(\"selected\", function (e) {\r\n      canvas.fire(\"custom:update\", e.target);\r\n      canvas.fire(\"node:selection\", e.target);\r\n    })\r\n    .on(\"deselected\", function (e) {\r\n      canvas.fire(\"node:deselection\", e.target);\r\n      canvas.fire(\"custom:deselection\", e.target);\r\n    })\r\n    .on(\"scaling\", function (e) {\r\n      canvas.fire(\"custom:update\", e.target);\r\n    })\r\n    .on(\"moving\", function (e) {\r\n      canvas.fire(\"node:moving\", e.transform.target);\r\n    });\r\n\r\n  return grp;\r\n};\r\n\r\nexport const updateNodeData = (canvas, data = {}) => {\r\n  const node = data?.node || canvas.getActiveObject();\r\n\r\n  switch (Object.keys(data)[0]) {\r\n    case \"text\":\r\n      node.item(1).set(data);\r\n      node.set(data);\r\n      return;\r\n    case \"move\":\r\n      moveEdge(node);\r\n      canvas.renderAll();\r\n      return;\r\n    case \"edge\":\r\n      const edge = createEdge(canvas, data);\r\n      node.edges.push({ nodeId: data.edge, line: edge });\r\n      const node2 = canvas.getObjects().find(({ id }) => id === data.edge);\r\n      node2.incomingEdges.push({ nodeId: node.id, line: edge });\r\n      canvas.fire(\"custom:update\", node);\r\n      canvas.add(edge).sendToBack(edge).renderAll();\r\n      return;\r\n    case \"selected\":\r\n      node.item(0).set({ fill: data.selected ? \"red\" : gray });\r\n      canvas.renderAll();\r\n      return;\r\n    default:\r\n      console.log(\"tf u doing\");\r\n      return;\r\n  }\r\n};\r\n","import { useCallback, useState } from \"react\";\r\nimport { createContainer } from \"unstated-next\";\r\nimport fabric from \"../modules/fabric\";\r\nimport { defaultNode, initCanvasState } from \"../data/config\";\r\nimport {\r\n  createNode,\r\n  updateNodeData,\r\n} from \"../components/content/components/canvas/components/node\";\r\n\r\nconst CanvasStore = createContainer(() => {\r\n  const [canvas, setCanvas] = useState(null);\r\n  const [selected, setSelected] = useState(null);\r\n  const [canvasState, setCanvasState] = useState(initCanvasState);\r\n\r\n  const initCanvas = useCallback((node, canvasId, canvasOptions) => {\r\n    if (!!node) {\r\n      var canvas = new fabric.Canvas(canvasId, canvasOptions);\r\n\r\n      canvas.on(\"custom:update\", (option) =>\r\n        setSelected((prevState) =>\r\n          prevState ? { ...prevState, ...option } : option\r\n        )\r\n      );\r\n      canvas.on(\"node:selection\", (option) =>\r\n        updateNodeData(canvas, { selected: true, node: option })\r\n      );\r\n      canvas.on(\"custom:deselection\", () => setSelected(null));\r\n      canvas.on(\"node:deselection\", (option) =>\r\n        updateNodeData(canvas, { selected: false, node: option })\r\n      );\r\n      canvas.on(\"node:moving\", (option) =>\r\n        updateNodeData(canvas, { move: true, node: option })\r\n      );\r\n      setCanvas(canvas);\r\n    }\r\n  }, []);\r\n\r\n  const resetCanvas = useCallback(() => {\r\n    canvas.dispose();\r\n    // setCanvas(null);\r\n    // // eslint-disable-next-line\r\n  }, [canvas]);\r\n\r\n  const addNode = useCallback(\r\n    (options = defaultNode) => {\r\n      if (canvas) {\r\n        const newNode = createNode(canvas, {\r\n          id: `node-${canvasState.nodeCount + 1}`,\r\n          title: options?.title || canvasState.nodeCount + 1,\r\n        });\r\n\r\n        canvas.add(newNode).setActiveObject(newNode);\r\n        setCanvasState({\r\n          ...canvasState,\r\n          nodeCount: canvasState.nodeCount + 1,\r\n        });\r\n      }\r\n      return;\r\n    },\r\n    [canvas, canvasState, setCanvasState]\r\n  );\r\n\r\n  const updateNode = useCallback(\r\n    (data) => {\r\n      if (canvas) {\r\n        updateNodeData(canvas, data);\r\n        canvas.renderAll();\r\n      }\r\n    },\r\n    [canvas]\r\n  );\r\n\r\n  const addEdge = useCallback(\r\n    (parent, target) => {\r\n      updateNode({ edge: target, node: parent });\r\n    },\r\n    [updateNode]\r\n  );\r\n\r\n  const addGraph = useCallback(\r\n    (type, graph = []) => {\r\n      if (type === \"ADJMAT\") {\r\n        const prevNodeCount = canvas.getObjects(\"node\").length;\r\n        let nodes = [];\r\n\r\n        [...Array(graph.length)].forEach((_, i) => {\r\n          const newNode = createNode(canvas, {\r\n            id: `node-${prevNodeCount + i + 1}`,\r\n            title: prevNodeCount + i + 1,\r\n          });\r\n\r\n          canvas.add(newNode);\r\n          nodes.push(newNode);\r\n        });\r\n        setCanvasState((prevState) => ({\r\n          ...prevState,\r\n          nodeCount: prevState?.nodeCount\r\n            ? prevState?.nodeCount + graph.length\r\n            : graph.length,\r\n        }));\r\n\r\n        graph.forEach((r, i) => {\r\n          const curNode = nodes[i];\r\n          r.forEach((el, j) => {\r\n            if (el !== \"0\" && i !== j) {\r\n              addEdge(curNode, nodes[j].id);\r\n            }\r\n          });\r\n        });\r\n        setSelected(null);\r\n      } else {\r\n        console.log(\"Jld hi\");\r\n      }\r\n    },\r\n    [canvas, addEdge]\r\n  );\r\n\r\n  return {\r\n    canvas,\r\n    initCanvas,\r\n    resetCanvas,\r\n    isCanvasActive: !!canvas,\r\n    addNode,\r\n    selected,\r\n    canvasState,\r\n    setCanvasState,\r\n    updateNode,\r\n    addEdge,\r\n    setSelected,\r\n    addGraph,\r\n  };\r\n});\r\n\r\nexport default CanvasStore;\r\n","import styled from \"styled-components\";\r\nimport { hFlex, vFlex } from \"../../../elements/helpers\";\r\n\r\nexport const ContentEl = styled.div`\r\n  ${hFlex}\r\n  width: 100%;\r\n  justify-content: flex-start;\r\n  height: 100%;\r\n`;\r\n\r\nexport const CanvasEl = styled.div`\r\n  width: 75%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const SidebarEl = styled.div`\r\n  ${vFlex}\r\n  width: 25%;\r\n  height: 100%;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nexport const GraphOptionsEl = styled.div``;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { lightGray } from \"../../../../elements/colorSchema\";\r\nimport CanvasStore from \"../../../../stores/canvasStore\";\r\nimport { CanvasEl } from \"../../elements\";\r\n\r\nfunction Canvas() {\r\n  const canvasContainer = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  const { initCanvas } = CanvasStore.useContainer();\r\n\r\n  useEffect(() => {\r\n    if (!canvasRef.current) return;\r\n    initCanvas(canvasRef, \"main-canvas\", {\r\n      width: canvasContainer.current.clientWidth,\r\n      height: canvasContainer.current.clientHeight,\r\n      backgroundColor: lightGray,\r\n      preserveObjectStacking: true,\r\n    });\r\n  }, [initCanvas]);\r\n\r\n  return (\r\n    <CanvasEl ref={canvasContainer}>\r\n      <canvas id=\"main-canvas\" ref={canvasRef} />\r\n    </CanvasEl>\r\n  );\r\n}\r\n\r\nexport default Canvas;\r\n","import React, { useState } from \"react\";\r\nimport { checkGraphInput } from \"../../../../../helpers/graph\";\r\nimport CanvasStore from \"../../../../../stores/canvasStore\";\r\nimport { GraphOptionsEl } from \"../../../elements\";\r\n\r\nfunction GraphOptions() {\r\n  const [input, setInput] = useState(\"\");\r\n  const [inputType, setInputType] = useState(\"ADJMAT\");\r\n  const { addGraph } = CanvasStore.useContainer();\r\n\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const setGraphInputType = (e) => {\r\n    //TO DO: Change current input to diff form\r\n    setInput(\"\");\r\n    setInputType(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const inputCheck = checkGraphInput(inputType, input);\r\n    if (!inputCheck.status) alert(inputCheck.message);\r\n    else {\r\n      addGraph(inputType, inputCheck.message);\r\n      setInput(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GraphOptionsEl>\r\n      <h3>Add a graph</h3>\r\n      <form>\r\n        <p>Graph Input Type</p>\r\n        <div className=\"graph-input-select\" onChange={setGraphInputType}>\r\n          <input\r\n            type=\"radio\"\r\n            defaultChecked\r\n            id=\"graph-option-adj-mat\"\r\n            name=\"graph-input-type\"\r\n            value=\"ADJMAT\"\r\n          />\r\n          <label htmlFor=\"graph-option-adj-mat\">Adjacency Matrix</label>\r\n          <input\r\n            type=\"radio\"\r\n            id=\"graph-option-edges\"\r\n            name=\"graph-input-type\"\r\n            value=\"EDGE\"\r\n          />\r\n          <label htmlFor=\"graph-option-edges\">Edges</label>\r\n        </div>\r\n        <textarea\r\n          rows=\"4\"\r\n          name=\"graph-input\"\r\n          value={input}\r\n          onChange={handleChange}\r\n        />\r\n        <button type=\"submit\" onClick={handleSubmit}>\r\n          Add\r\n        </button>\r\n      </form>\r\n    </GraphOptionsEl>\r\n  );\r\n}\r\n\r\nexport default GraphOptions;\r\n","export const checkGraphInput = (type = \"ADJMAT\", input = \"\") => {\r\n  let output = { message: \"all good\", status: \"true\" };\r\n  if (type === \"ADJMAT\") {\r\n    const mat = input\r\n      .replace(/\\n+/g, \"\\n\")\r\n      .trim()\r\n      .split(\"\\n\")\r\n      .map((arr) => arr.replace(/\\s+/g, \" \").trim().split(\" \"));\r\n\r\n    mat.every((row, i) => {\r\n      if (row.length !== mat.length) {\r\n        output = {\r\n          message: `Please input a square matrix. Row ${i + 1} of invalid size`,\r\n          status: false,\r\n        };\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n    if (!output.status) return output;\r\n    else\r\n      output = {\r\n        status: true,\r\n        message: mat,\r\n      };\r\n  }\r\n  return output;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport CanvasStore from \"../../../../../stores/canvasStore\";\r\n\r\nfunction NodeOptions() {\r\n  const { canvas, updateNode, selected, addEdge } = CanvasStore.useContainer();\r\n  const [nodeState, setNodeState] = useState(selected);\r\n  const [otherNodes, setOtherNodes] = useState([]);\r\n\r\n  const handleChange = (e) => {\r\n    const update = { [e.target.name]: e.target.value };\r\n    setNodeState((prev) => ({ ...prev, ...update }));\r\n    updateNode(update);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setNodeState((prev) => ({ ...prev, ...selected }));\r\n  }, [selected]);\r\n\r\n  useEffect(() => {\r\n    setOtherNodes(\r\n      canvas\r\n        .getObjects()\r\n        .filter(\r\n          ({ id, type }) =>\r\n            type === \"node\" &&\r\n            id !== selected.id &&\r\n            !selected.edges.find(({ nodeId }) => nodeId === id)\r\n        )\r\n        .map(({ id }) => id)\r\n    );\r\n  }, [setOtherNodes, selected, canvas]);\r\n\r\n  return (\r\n    <div className=\"node-options\">\r\n      <p>Id: {nodeState.id}</p>\r\n      <label htmlFor=\"text\">Name:</label>\r\n      <input value={nodeState.text} name=\"text\" onChange={handleChange} />\r\n      <h5>Edges:</h5>\r\n      {selected.edges.length > 0 ? (\r\n        <ul>\r\n          {selected.edges.map((edge) => (\r\n            <li key={edge.nodeId}>With {edge.nodeId}</li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No edges for this node</p>\r\n      )}\r\n      {otherNodes.length > 0 ? (\r\n        <form\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            addEdge(selected, e.target.getElementsByTagName(\"select\")[0].value);\r\n          }}\r\n        >\r\n          <label htmlFor=\"edge\">Add edge: </label>\r\n          <select name=\"edge\">\r\n            {otherNodes.map((node) => (\r\n              <option key={node} value={node}>\r\n                {node}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <button type=\"submit\">Add Edge</button>\r\n        </form>\r\n      ) : (\r\n        <p>No node available for an edge</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NodeOptions;\r\n","import React from \"react\";\r\nimport CanvasStore from \"../../../../stores/canvasStore\";\r\nimport { SidebarEl } from \"../../elements\";\r\nimport GraphOptions from \"./components/graphOptions\";\r\nimport NodeOptions from \"./components/nodeOptions\";\r\n\r\nfunction Sidebar() {\r\n  const { selected } = CanvasStore.useContainer();\r\n\r\n  return (\r\n    <SidebarEl>\r\n      {selected\r\n        ? (() => {\r\n            switch (selected.type) {\r\n              case \"node\":\r\n                return <NodeOptions />;\r\n              case \"graph\":\r\n                return <GraphOptions />;\r\n              default:\r\n                return <div>Error</div>;\r\n            }\r\n          })()\r\n        : \"Select an object to view its properties\"}\r\n    </SidebarEl>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport Canvas from \"./components/canvas\";\r\nimport Sidebar from \"./components/sidebar\";\r\nimport { ContentEl } from \"./elements\";\r\n\r\nfunction Content() {\r\n  return (\r\n    <ContentEl>\r\n      <Sidebar />\r\n      <Canvas />\r\n    </ContentEl>\r\n  );\r\n}\r\n\r\nexport default Content;\r\n","import styled from \"styled-components\";\r\nimport { grayBorder } from \"../../../elements/colorSchema\";\r\nimport { hFlex } from \"../../../elements/helpers\";\r\n\r\nexport const NavbarEl = styled.div`\r\n  ${hFlex}\r\n  box-sizing: border-box;\r\n  padding: 1em;\r\n  width: 100%;\r\n  justify-content: flex-start;\r\n  border-bottom: 1px solid ${grayBorder};\r\n`;\r\n","import React from \"react\";\r\nimport CanvasStore from \"../../stores/canvasStore\";\r\nimport { NavbarEl } from \"./elements/index\";\r\n\r\nfunction Navbar() {\r\n  const { isCanvasActive, addNode, setSelected } = CanvasStore.useContainer();\r\n  return (\r\n    <NavbarEl>\r\n      <button\r\n        onClick={() =>\r\n          isCanvasActive ? addNode() : console.log(\"Canvas not loaded\")\r\n        }\r\n        className=\"sidebar-btn\"\r\n        disabled={!isCanvasActive}\r\n      >\r\n        Add Node\r\n      </button>\r\n      <button\r\n        onClick={() =>\r\n          isCanvasActive\r\n            ? setSelected({ type: \"graph\" })\r\n            : console.log(\"Canvas not loaded\")\r\n        }\r\n        className=\"sidebar-btn\"\r\n        disabled={!isCanvasActive}\r\n      >\r\n        Add Graph\r\n      </button>\r\n    </NavbarEl>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { AppEl } from \"../elements/app\";\r\nimport CanvasStore from \"../stores/canvasStore\";\r\nimport { withStore } from \"../utils/withStore\";\r\nimport Content from \"./content\";\r\nimport Navbar from \"./navbar\";\r\n\r\nfunction App() {\r\n  return (\r\n    <AppEl>\r\n      <Navbar />\r\n      <Content />\r\n    </AppEl>\r\n  );\r\n}\r\n\r\nexport default withStore([CanvasStore])(App);\r\n","import React from \"react\";\r\n\r\nexport const withStore =\r\n  (stores = []) =>\r\n  (WrappedComponent) =>\r\n  (props) =>\r\n    stores.reduce(\r\n      (component, Store) => <Store.Provider>{component}</Store.Provider>,\r\n      <WrappedComponent {...props} />\r\n    );\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}